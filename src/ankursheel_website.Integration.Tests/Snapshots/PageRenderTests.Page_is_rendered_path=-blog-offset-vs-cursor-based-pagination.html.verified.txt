<!DOCTYPE html><html lang="en" class="min-h-screen"><head>
    

<title>Offset vs Cursor Based Pagination</title>
<meta charset="utf-8">


<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Understand SQL pagination with practical examples, comparing offset and cursor methods to manage datasets efficiently.">
<link href="/assets/styles.css" rel="stylesheet">
<link href="/assets/code-styles/obsidian.min.css" rel="stylesheet">
    <link rel="canonical" href="https://www.ankursheel.com/blog/offset-vs-cursor-based-pagination">   
<meta itemprop="name" content="Offset vs Cursor Based Pagination">
<meta itemprop="description" content="Understand SQL pagination with practical examples, comparing offset and cursor methods to manage datasets efficiently.">
    <meta itemprop="image" content="https://www.ankursheel.com/assets/images/social/offset-vs-cursor-based-pagination-facebook.png">
<meta property="og:url" content="https://www.ankursheel.com/blog/offset-vs-cursor-based-pagination">
<meta property="og:type" content="article">
<meta property="og:title" content="Offset vs Cursor Based Pagination">
<meta property="og:description" content="Understand SQL pagination with practical examples, comparing offset and cursor methods to manage datasets efficiently.">
    <meta property="og:image" content="https://www.ankursheel.com/assets/images/social/offset-vs-cursor-based-pagination-facebook.png">
    <meta property="og:image:secure_url" content="https://www.ankursheel.com/assets/images/social/offset-vs-cursor-based-pagination-facebook.png">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="ankur_sheel">
<meta name="twitter:creator" content="ankur_sheel">
<meta name="twitter:title" content="Offset vs Cursor Based Pagination">
<meta name="twitter:description" content="Understand SQL pagination with practical examples, comparing offset and cursor methods to manage datasets efficiently.">
    <meta name="twitter:image" content="https://www.ankursheel.com/assets/images/social/offset-vs-cursor-based-pagination-twitter.png">
    <meta name="twitter:image:secure_url" content="https://www.ankursheel.com/assets/images/social/offset-vs-cursor-based-pagination-twitter.png">

</head>
<body class="font-sans font-normal leading-relaxed font-base text-gray-800 min-h-screen bg-gray-100">
<noscript>
        <img src="https://ankursheel.goatcounter.com/count?p=/test-noscript">
</noscript>

<header class="sticky top-0 bg-white shadow-lg z-10 w-full">
    
<nav x-data="{ open: false }" class="flex flex-col max-w-screen-xl px-4 mx-auto md:items-center md:justify-between md:flex-row md:px-6 md:px-8">
    <div class="flex flex-col items-start">
        <div class="flex flex-row items-center justify-between font-semibold w-full">
            <a href="/" class="navigation-link text-lg hover:invert-0 text-gray-900 uppercase rounded-lg focus:outline-none">Ankur Sheel</a>
            <button class="md:hidden rounded-lg focus:outline-none focus:shadow-outline" x-on:click="open = !open">
                <svg fill="currentColor" viewBox="0 0 20 20" class="w-6 h-6">
                    <path x-show="!open" fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z" clip-rule="evenodd"></path>
                    <path x-show="open" fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                </svg>
            </button>
        </div>
        <div class="pb-4 flex items-center">
            
<div class="flex">
    <a class="" href="https://twitter.com/ankur_sheel" title="Connect on Twitter" target="_blank" rel="noopener noreferrer">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 15 15" class="h-4">
            <path fill="currentColor" fill-rule="evenodd" d="M7.233 4.696c0-1.727 1.4-3.127 3.127-3.127 1.014 0 1.823.479 2.365 1.175a5.246 5.246 0 0 0 1.626-.629 2.634 2.634 0 0 1-1.148 1.45l.002.003a5.26 5.26 0 0 0 1.5-.413l-.001.002c-.337.505-.76.95-1.248 1.313.026.177.04.354.04.53 0 3.687-2.809 7.975-7.975 7.975a7.93 7.93 0 0 1-4.296-1.26.5.5 0 0 1-.108-.748.45.45 0 0 1 .438-.215c.916.108 1.83-.004 2.637-.356a3.086 3.086 0 0 1-1.69-1.876.45.45 0 0 1 .103-.448 3.07 3.07 0 0 1-1.045-2.31v-.034a.45.45 0 0 1 .365-.442 3.068 3.068 0 0 1-.344-1.416c0-.468.003-1.058.332-1.59a.45.45 0 0 1 .323-.208.5.5 0 0 1 .538.161 6.964 6.964 0 0 0 4.46 2.507v-.044Zm-1.712 7.279a6.936 6.936 0 0 1-2.249-.373 5.318 5.318 0 0 0 2.39-1.042.45.45 0 0 0-.27-.804 2.174 2.174 0 0 1-1.714-.888c.19-.015.376-.048.556-.096a.45.45 0 0 0-.028-.876 2.18 2.18 0 0 1-1.644-1.474c.2.048.409.077.623.084a.45.45 0 0 0 .265-.824 2.177 2.177 0 0 1-.97-1.812c0-.168.003-.317.013-.453a7.95 7.95 0 0 0 5.282 2.376.5.5 0 0 0 .513-.61 2.127 2.127 0 0 1 2.071-2.614c1.234 0 2.136 1.143 2.136 2.432 0 3.256-2.476 6.974-6.975 6.974Z" clip-rule="evenodd"></path>
        </svg>
    </a>
    <a class="ml-4" href="https://www.linkedin.com/in/ankursheel" title="View my LinkedIn profile" target="_blank" rel="noopener noreferrer">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="h-4">
            <path fill="currentColor" d="M4.98 3.5C4.98 4.881 3.87 6 2.5 6S.02 4.881.02 3.5C.02 2.12 1.13 1 2.5 1s2.48 1.12 2.48 2.5zM5 8H0v16h5V8zm7.982 0H8.014v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0V24H24V13.869c0-7.88-8.922-7.593-11.018-3.714V8z"></path>
        </svg>
    </a>

    <a class="ml-4" href="https://github.com/AnkurSheel" title="Check out my work on Github" target="_blank" rel="noopener noreferrer">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 15 15" class="h-4">
            <path fill="currentColor" fill-rule="evenodd" d="M7.5.85a6.65 6.65 0 0 0-2.102 12.96c.332.061.454-.144.454-.32 0-.159-.006-.576-.01-1.131-1.849.401-2.24-.892-2.24-.892-.302-.768-.738-.973-.738-.973-.604-.412.046-.404.046-.404.667.047 1.018.685 1.018.685.594 1.017 1.557.723 1.936.553.06-.43.232-.723.422-.889-1.477-.168-3.029-.738-3.029-3.287 0-.726.26-1.319.685-1.784-.069-.168-.297-.844.065-1.76 0 0 .558-.179 1.828.681A6.41 6.41 0 0 1 7.5 4.066a6.394 6.394 0 0 1 1.665.223c1.27-.86 1.827-.68 1.827-.68.363.915.135 1.59.066 1.759.427.465.684 1.058.684 1.784 0 2.555-1.555 3.117-3.036 3.282.238.205.45.611.45 1.232 0 .888-.007 1.605-.007 1.823 0 .178.12.385.457.32A6.652 6.652 0 0 0 7.499.85Z" clip-rule="evenodd"></path>
        </svg>
    </a>


    <a class="ml-4" target="_blank" rel="noopener noreferrer" href="/rss.xml" title="RSS">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" class="h-4">
            <path d="M6.503 20.752A3.25 3.25 0 0 1 3.252 24 3.25 3.25 0 0 1 0 20.752a3.25 3.25 0 0 1 3.252-3.248 3.25 3.25 0 0 1 3.251 3.248zM0 8.18v4.811c6.05.062 10.96 4.966 11.022 11.009h4.817C15.777 15.29 8.721 8.242 0 8.18zm0-3.368C10.58 4.858 19.152 13.406 19.183 24H24C23.97 10.769 13.245.046 0 0v4.812z" fill="currentColor"></path>
        </svg>
    </a>
</div>

        </div>
    </div>
    <ul :class="{'flex': open, 'hidden': !open}" class="flex-col flex-grow pb-4 items-center md:pb-0 hidden md:flex md:justify-end md:flex-row">
        

    <li class="navigation-link">
            <div x-on:click.away="open = false" class="relative" x-data="{ open: false }">
                <button x-on:click="open = !open" class="flex flex-row items-center w-full text-left bg-transparent font-semibold md:w-auto md:inline md:ml-4 hover:text-gray-900">
                    <span>About</span>
                    <svg fill="currentColor" viewBox="0 0 20 20" :class="{'rotate-180': open, 'rotate-0': !open}" class="inline w-4 h-4 mt-1 ml-1 transition-transform duration-200 transform md:-mt-1">
                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                </button>
                <div x-show="open" x-transition:enter="transition ease-out duration-100" x-transition:enter-start="transform opacity-0 scale-95" x-transition:enter-end="transform opacity-100 scale-100" x-transition:leave="transition ease-in duration-75" x-transition:leave-start="transform opacity-100 scale-100" x-transition:leave-end="transform opacity-0 scale-95" class="absolute right-0 w-full mt-2 origin-top-right rounded-md shadow-lg md:w-48">
                    <div class="px-2 py-2 bg-white rounded-md shadow">
                                    <a class="block hover:invert-0 navigation-link" href="/about">About</a>
                                    <a class="block hover:invert-0 navigation-link" href="/impossible-list">Impossible List</a>
                                    <a class="block hover:invert-0 navigation-link" href="https://www.discoveriesinbookland.com/" target="_blank">Book Summaries</a>
                    </div>
                </div>
            </div>
    </li>
    <li class="navigation-link">
                <a class="hover:invert-0" href="/blog">Blog</a>
    </li>
    <li class="navigation-link">
                <a class="hover:invert-0" href="/tags">Tags</a>
    </li>
    <li class="navigation-link">
                <a class="hover:invert-0" href="/cv">CV</a>
    </li>
    <li class="navigation-link">
                <a class="hover:invert-0" href="/contact">Contact</a>
    </li>

    </ul>
</nav>

</header>

<main class="mx-auto max-w-prose p-4 prose prose-xl prose-purple">
    <h1 class="text-center">Offset vs Cursor Based Pagination</h1>
    <div class="flex flex-col min-h-screen">
        <article class="prose-code:bg-slate-400">
            

<div class="prose-sm italic">
    <div class="flex flex-col sm:flex-row justify-evenly items-center text-sm gap-y-1">
        <span class="mr-4 sm:py-0 py-1">Published on <time datetime="2025-04-07">Apr 07, 2025</time></span>
        <span class="mr-4 sm:py-0 py-1">Last Updated on <time datetime="2025-04-07">Apr 07, 2025</time></span>
        <span class="sm:py-0 py-1">
            Estimated Reading Time: <span class="font-bold">5 min</span>
        </span>
    </div>

    <div class="flex flex-row flex-wrap gap-1 place-content-center">
            <a href="/tags/sql" class="block flex-initial border-2 border-black m-2 rounded-xl p-2 bg-gray-200 shadow-md">sql</a>
            <a href="/tags/snippet" class="block flex-initial border-2 border-black m-2 rounded-xl p-2 bg-gray-200 shadow-md">snippet</a>
    </div>
</div>

<h2 id="introduction">Introduction</h2>
<p>SQL pagination helps manage large datasets by breaking them into smaller, more manageable chunks called 'pages.' It prevents overwhelming applications by retrieving data one page at a time, ensuring smoother performance and a better user experience.</p>
<p>In this article, I'll discuss two primary SQL pagination methods—offset and cursor-based—and explore an advanced technique for efficiently handling large datasets, highlighting their specific use cases and benefits.</p>
<p><img src="/assets/images/posts/offset-vs-cursor-based-pagination/cover.png" width="300" alt="A robot holding a book with turning pages, trying to find a specific page"></p>
<h2 id="offset-pagination">Offset Pagination</h2>
<p>Offset pagination involves skipping a specified number of rows and then taking a fixed number of rows, allowing for flexible data retrieval.</p>
<h3 id="example">Example</h3>
<p>Here's a typical query using offset pagination:</p>
<pre><code class="language-sql hljs"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>         
<span class="hljs-keyword">FROM</span> product        
<span class="hljs-keyword">WHERE</span> category <span class="hljs-operator">=</span> <span class="hljs-number">1</span>        
<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> id         
LIMIT <span class="hljs-operator">&</span>#<span class="hljs-number">64</span>;pageSize         
<span class="hljs-keyword">OFFSET</span> $<span class="hljs-keyword">offset</span>;        
</code></pre>
<p>The <code>LIMIT</code> clause defines how many rows to return, while <code>OFFSET</code> skips a specified number of rows. <code>ORDER BY</code> ensures results are consistent.</p>
<p>Typically, <code>pageSize</code> and <code>offset</code> are set based on user input or application logic to control pagination dynamically. For example, if <code>pageSize</code> is 100 and <code>offset</code> is 200, the query retrieves rows 200-300.</p>
<h3 id="advantages">Advantages</h3>
<p>Offset pagination allows you to jump directly to a specific set of records, which is useful for applications requiring quick access to specific data or &quot;go to page X&quot; functionality. For instance, you can easily access a specific range like 3000-3100.</p>
<p>It is easier to implement, making it useful for smaller systems or static datasets like blog archives or product lists.</p>
<h3 id="disadvantages">Disadvantages</h3>
<p>Offset pagination requires scanning all preceding rows to find the starting point. This can be inefficient and slow as the dataset grows. Performance degrades with larger datasets, as scanning more rows leads to slower response times.</p>
<p>For example, in a query like <code>SELECT * FROM product ORDER BY id LIMIT 100 OFFSET 100000</code>, Postgres scans and discards 100,000 rows even though only 100 are needed.</p>
<p>While offset-based pagination is common in legacy systems, its utility in modern systems may be limited compared to cursor-based pagination.</p>
<h2 id="cursor-based-pagination">Cursor-based Pagination</h2>
<p>Unlike offset pagination, cursor-based pagination fetches results using a unique identifier (or a combination of columns), avoiding the need to skip rows.</p>
<h3 id="example-1">Example</h3>
<p>Here's how you might implement cursor-based pagination:</p>
<pre><code class="language-sql hljs"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>         
<span class="hljs-keyword">FROM</span> product         
<span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">&</span>gt; $lastId        
    <span class="hljs-keyword">AND</span> category <span class="hljs-operator">=</span> <span class="hljs-number">1</span>        
<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> id         
LIMIT $pageSize;        
</code></pre>
<p>Notice that, unlike the previous example, this query doesn't use <code>OFFSET</code>. Instead, we keep track of the <code>id</code> of the last record retrieved from the previous page and use it in the <code>WHERE</code> clause to fetch the next set of records.</p>
<p>To maintain reliable pagination, it's essential to ensure the cursor column is unique and immutable, as changes could disrupt the order of results. A good candidate is a primary key ID or a <code>CreatedTimestamp</code> column.</p>
<h3 id="advantages-1">Advantages</h3>
<p>Cursor-based pagination is generally more efficient, as it avoids scanning and discarding rows. Instead, it directly jumps to records based on the cursor value. This approach remains efficient even for large offsets because the database can quickly use an index on the cursor column to find the starting point.</p>
<p>Cursor-based pagination provides stable results even if new records are inserted or deleted between page requests. Each page contains the expected set of records based on the cursor value.</p>
<h3 id="disadvantages-1">Disadvantages</h3>
<p>Cursor-based pagination requires sequential page traversal and is more complex to implement because you must track the cursor value in your application code. This might be less convenient for users who want to navigate directly to a specific page.</p>
<p><em><strong>Note:</strong> However, we can avoid the need for sequential page traversal by using PageInfo/PageCursor in GraphQL.</em></p>
<p>We need to be mindful of <a href="https://cheatsheetseries.owasp.org/cheatsheets/Insecure_Direct_Object_Reference_Prevention_Cheat_Sheet.html">IDOR (Insecure Direct Object References)</a>. If IDs are sensitive, we should encrypt cursor values with a random salt.</p>
<p>It can become quite complex if you need extra features like sorting on multiple columns, etc.</p>
<h2 id="advanced-cursor-pagination-techniques">Advanced Cursor Pagination Techniques</h2>
<p>When dealing with extremely large datasets, an advanced cursor-based technique can further optimise performance.</p>
<p>In my experience using the basic cursor-based example on a table with 163 million rows, where only 300K rows met the <code>WHERE</code> clause criteria, the query timed out even with a <code>LIMIT</code> of 1000. This occurred because the query had to scan too many rows before finding 1000 that matched the criteria.</p>
<p>Now, you might wonder why it would need to scan so many rows if you have an index. The index's benefit is that it lets the database quickly locate the starting point. Imagine that the first record is in row 1. Now, the second record is after 1 million rows. To reach the limit of 1000, at least 1 million rows will need to be scanned. Even though there is an index, it can (and probably will) result in a timeout because it requires scanning many non-matching rows to find the ones that match.</p>
<p>In such scenarios, it's crucial to limit the number of rows scanned during each query execution. This can be achieved by adding a constraint that ensures efficient data retrieval, even if the <code>LIMIT</code> is not fully met.</p>
<h3 id="example-2">Example</h3>
<p>Here's an updated query:</p>
<pre><code class="language-sql hljs"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>         
<span class="hljs-keyword">FROM</span> product         
<span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">&</span>gt; $lastId        
    <span class="hljs-keyword">AND</span> id <span class="hljs-operator">&</span>lt;<span class="hljs-operator">=</span> $clampId        
    <span class="hljs-keyword">AND</span> category <span class="hljs-operator">=</span> <span class="hljs-number">1</span>        
<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> id         
LIMIT $pageSize;        
</code></pre>
<p>The <code>clampId</code> serves as an upper boundary, calculated as <code>lastId</code> plus a predefined range, to limit the number of rows scanned per query execution.</p>
<p>For instance, if <code>lastId</code> is 1000 and the scan limit is 10,000 rows, set <code>clampId</code> to 11,000. The <code>LIMIT</code> remains 1,000, ensuring immediate return if 1,000 matches are found or scanning at most 10,000 rows.</p>
<p>By clamping the range, we can significantly reduce query execution time, making it feasible to handle large datasets without overwhelming the system.</p>
<h3 id="using-non-sequential-identifiers">Using Non-sequential Identifiers</h3>
<p>While in the examples, the <code>id</code> is assumed to be numeric and sequential, it doesn't need to be to implement cursor-based pagination. We can, for instance, combine multiple fields, e.g., <code>&lt;last_updated_at&gt;</code> for sorting and <code>&lt;last_id&gt;</code> as a UUID to get the last item on the current page.</p>
<pre><code class="language-sql hljs"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span>       
<span class="hljs-keyword">FROM</span> product      
<span class="hljs-keyword">WHERE</span> (last_updated_at <span class="hljs-operator">&</span>lt; $lastUpdatedAt)      
 <span class="hljs-keyword">OR</span> (last_updated_at <span class="hljs-operator">=</span> $lastUpdatedAt <span class="hljs-keyword">AND</span> last_id <span class="hljs-operator">&</span>gt; $lastId)      
<span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> last_updated_at <span class="hljs-keyword">DESC</span>, last_id      
LIMIT $pageSize;      
</code></pre>
<h2 id="conclusion">Conclusion</h2>
<p>Choosing the right pagination approach ensures optimal application performance and user satisfaction, regardless of dataset size.</p>
<p>While offset pagination is simpler to implement, it suffers from significant performance degradation at scale. In contrast, cursor pagination maintains consistent performance regardless of page depth.</p>
<p>However, offset-based pagination allows us to arbitrarily jump to any page. With cursor pagination, we have to traverse pages sequentially or use more complex techniques.</p>
<p>The choice between these two approaches ultimately depends on your use case. Choose cursor pagination for high-performance needs with large datasets. Opt for offset pagination when dataset size is manageable, and random page navigation is required.</p>




<aside class="m-2">
    <div class="my-6 flex justify-center gap-5 flex-wrap">
        <a class="bg-social-twitter social-button" href="https://twitter.com/intent/tweet?url=https://www.ankursheel.com/blog/offset-vs-cursor-based-pagination&amp;text=Offset%20vs%20Cursor%20Based%20Pagination via @ankur_sheel.&amp;#xD;&amp;#xA;Understand%20SQL%20pagination%20with%20practical%20examples%2C%20comparing%20offset%20and%20cursor%20methods%20to%20manage%20datasets%20efficiently." onclick="window.open(this.href, 'twitter-share', 'width=550,height=235'); return false;">Share on Twitter</a>
        <a class="bg-social-linkedin social-button" href="https://www.linkedin.com/sharing/share-offsite/?url=https://www.ankursheel.com/blog/offset-vs-cursor-based-pagination" target="_blank" rel="noopener noreferrer">Share on Linkedin</a>
    </div>
</aside>




<aside class="border-t-2 mt-2 p-4 rounded-lg shadow-sm">
    <h2 class="mt-2 text-center">You might also like</h2>

    <ul>
            <li>
                <a href="reset-primary-key-sequence-out-sync-postgres">How to reset the primary key sequence in Postgres</a>
            </li>
            <li>
                <a href="query-clause-dapper-npgsql">Dapper and NPGSql : Write a query with the IN operator</a>
            </li>
            <li>
                <a href="verifying-method-calls-class-mockito-spies">Verifying Method Calls within a class using Mockito Spies</a>
            </li>
            <li>
                <a href="feature-flag-cleanup-featureflagwillmakethisobsolete-annotation">Feature Flags: Removing Unused Methods on Cleanup</a>
            </li>
    </ul>
</aside>


<aside class="border-t-2 mt-2 p-4 rounded-lg shadow-sm">
    <form action="https://ankursheel.us12.list-manage.com/subscribe/post?u=d88459c290a1a8d98ad780bbc&amp;amp;id=31e4ebb75b" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
        <div id="mc_embed_signup_scroll">
            <p class="mt-2 text-2xl font-bold text-center">Want to know when a new post comes out?</p>
            <div class="flex gap-4 items-center justify-center flex-wrap">
                <input class="rounded-md border-gray-300 focus:border-gray-500 focus:ring-0 required" aria-label="First Name" name="FNAME" required="" placeholder="First Name" type="text" id="mce-FNAME">
                <input class="rounded-md border-gray-300 focus:border-gray-500 focus:ring-0 required email" name="EMAIL" aria-label="Email Address" placeholder="Email Address" required="" type="email" id="mce-EMAIL">
                <button class="px-3 py-2 text-white bg-green-400 rounded-md focus:bg-indigo-600 focus:outline-none flex-none" type="submit">Subscribe</button>
                <input type="checkbox" class="hidden" value="1" name="group[52461][1]" id="mce-group[52461]-52461-0" checked="">
                <div style="position: absolute; left: -5000px;" aria-hidden="true">
                    <input type="text" name="b_d88459c290a1a8d98ad780bbc_31e4ebb75b" tabindex="-1" value="">
                </div>
                <div>
                    <a href="http://eepurl.com/hRcTAL" title="Mailchimp - email marketing made easy and fun">
                        <img src="https://eep.io/mc-cdn-images/template_images/branding_logo_text_dark_dtp.svg">
                    </a>
                </div>
            </div>
        </div>
    </form>
</aside>


<footer>
    <script src="https://giscus.app/client.js" data-repo="AnkurSheel/blog-comments" data-repo-id="R_kgDOIAUZqA" data-category="Announcements" data-category-id="DIC_kwDOIAUZqM4CRdIF" data-mapping="pathname" data-strict="1" data-reactions-enabled="1" data-emit-metadata="0" data-input-position="top" data-theme="preferred_color_scheme" data-lang="en" data-loading="lazy" crossorigin="anonymous" async="">
    </script>

</footer>

        </article>
    </div>
</main>



<script src="/assets/js/blog.js" defer=""></script>
<script src="https://unpkg.com/alpinejs@3.10.2/dist/cdn.min.js" defer=""></script>
    <script data-goatcounter="https://ankursheel.goatcounter.com/count" src="/assets/js/gc-count.js"></script>


<script data-name="BMC-Widget" data-cfasync="false" src="https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js" data-id="ankursheel" data-description="Support me on Buy me a coffee!" data-message="Did you learn something? Buy me a coffee" data-color="#FF813F" data-position="Right" data-x_margin="18" data-y_margin="18" defer="">
</script>




</body></html>