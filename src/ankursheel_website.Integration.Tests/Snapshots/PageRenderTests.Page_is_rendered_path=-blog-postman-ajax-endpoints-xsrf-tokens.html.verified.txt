
<!DOCTYPE html>
<html lang="en" class="min-h-screen">
<head>
    

<title>Ankur Sheel - Testing endpoints protected with an XSRF token in Postman</title>
<meta charset="utf-8"/>

<!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MG9PGWH');</script>
    <!-- End Google Tag Manager -->

<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<meta name="description" content="How can we test the endpoints using an anti-forgery token to protect us from XSRF(Cross-Site Request Forgery) attacks in Postman"/>
<link href="/assets/styles.css" rel="stylesheet"/>
<link href="/assets/code-styles/obsidian.min.css" rel="stylesheet"/>
<link rel="canonical" href="https://www.ankursheel.com/blog/postman-ajax-endpoints-xsrf-tokens"/>

<meta itemProp="name" content="Testing endpoints protected with an XSRF token in Postman"/>
<meta itemProp="description" content="How can we test the endpoints using an anti-forgery token to protect us from XSRF(Cross-Site Request Forgery) attacks in Postman"/>
    <meta itemProp="image" content="https://www.ankursheel.com/assets/images/social/postman-ajax-endpoints-xsrf-tokens-facebook.png"/>
<meta property="og:url" content="https://www.ankursheel.com/blog/postman-ajax-endpoints-xsrf-tokens"/>
<meta property="og:type" content="article"/>
<meta property="og:title" content="Testing endpoints protected with an XSRF token in Postman"/>
<meta property="og:description" content="How can we test the endpoints using an anti-forgery token to protect us from XSRF(Cross-Site Request Forgery) attacks in Postman"/>
    <meta property="og:image" content="https://www.ankursheel.com/assets/images/social/postman-ajax-endpoints-xsrf-tokens-facebook.png"/>
    <meta property="og:image:secure_url" content="https://www.ankursheel.com/assets/images/social/postman-ajax-endpoints-xsrf-tokens-facebook.png"/>
<meta name="twitter:card" content="summary_large_image"/>
<meta name="twitter:site" content="ankur_sheel"/>
<meta name="twitter:creator" content="ankur_sheel"/>
<meta name="twitter:title" content="Testing endpoints protected with an XSRF token in Postman"/>
<meta name="twitter:description" content="How can we test the endpoints using an anti-forgery token to protect us from XSRF(Cross-Site Request Forgery) attacks in Postman"/>
    <meta name="twitter:image" content="https://www.ankursheel.com/assets/images/social/postman-ajax-endpoints-xsrf-tokens-twitter.png"/>
    <meta name="twitter:image:secure_url" content="https://www.ankursheel.com/assets/images/social/postman-ajax-endpoints-xsrf-tokens-twitter.png"/>

</head>
<body class="font-sans font-normal leading-relaxed font-base text-gray-800 min-h-screen bg-gray-100">
    <!-- Google Tag Manager (noscript) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MG9PGWH"
                height="0" width="0" style="display:none;visibility:hidden">
        </iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->
<header class="sticky top-0 bg-white shadow-lg z-10 w-full">
    

<!-- https://www.section.io/engineering-education/creating-a-responsive-navigation-bar-using-tailwind-css-and-javascript/ -->

<nav class="text-gray-500 font-semibold">
    <div class="max-w-6xl mx-auto px-4">
        <div class="flex justify-between">
            <div class="flex space-x-7 items-center  ">
                <!-- Website Logo -->
                <div>
                    <a href="/" class="flex items-center py-4 px-2 ">
                            Ankur Sheel
                    </a>
                </div>
                <ul class="hidden lg:flex items-center space-x-1">
                        <li class="py-4 px-2 transition-all transform hover:scale-110">
                            <a href="/about">About</a>
                        </li>
                        <li class="py-4 px-2 transition-all transform hover:scale-110">
                            <a href="/blog">All Posts</a>
                        </li>
                        <li class="py-4 px-2 transition-all transform hover:scale-110">
                            <a href="/tags">All Tags</a>
                        </li>
                        <li class="py-4 px-2 transition-all transform hover:scale-110">
                            <a href="/contact">Contact</a>
                        </li>
                        <li class="py-4 px-2 transition-all transform hover:scale-110">
                            <a href="/cv">CV</a>
                        </li>
                        <li class="py-4 px-2 transition-all transform hover:scale-110">
                            <a href="/impossible-list">Impossible List</a>
                        </li>
                </ul>
            </div>

            <ul class="hidden lg:flex items-center space-x-3">
                <li>
                    <a role="button" class="" target="_blank" rel="noopener noreferrer" href="/rss.xml" title="RSS">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" class="h-6">
                          <path d="M6.503 20.752A3.25 3.25 0 0 1 3.252 24 3.25 3.25 0 0 1 0 20.752a3.25 3.25 0 0 1 3.252-3.248 3.25 3.25 0 0 1 3.251 3.248zM0 8.18v4.811c6.05.062 10.96 4.966 11.022 11.009h4.817C15.777 15.29 8.721 8.242 0 8.18zm0-3.368C10.58 4.858 19.152 13.406 19.183 24H24C23.97 10.769 13.245.046 0 0v4.812z" fill="currentColor"/>
                        </svg>

                    </a>
                </li>
                <li>
                    <a role="button" class="inline-flex items-center bg-green-400 text-white p-2 rounded-md text-2xl drop-shadow-lg hover:bg-green-800" target="_blank" rel="noopener noreferrer" href="https://www.buymeacoffee.com/ankursheel" title="Did you learn something or find this summary interesting?">
                        <img class="h-8 mr-2 border-none" src="/assets/images/bmc-logo.svg" alt="Buy Me A Coffee">
                        <p class="font-cookie">Buy me a coffee</p>
                    </a>
                </li>
            </ul>

            <div class="lg:hidden flex items-center">
                <button class="outline-none mobile-menu-button" aria-label="Mobile Menu">
                    <svg class="h-6 w-6 fill-current" viewBox="0 0 24 24">
                        <path fill-rule="evenodd"
                              d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z"/>
                    </svg>
                </button>
            </div>

        </div>
        <div class="hidden mobile-menu">
            <ul class="flex flex-col">
                    <li class="text-sm px-2 py-4 hover:bg-green-500 transition duration-300">
                        <a href="/about" class="block">About</a>
                    </li>
                    <li class="text-sm px-2 py-4 hover:bg-green-500 transition duration-300">
                        <a href="/blog" class="block">All Posts</a>
                    </li>
                    <li class="text-sm px-2 py-4 hover:bg-green-500 transition duration-300">
                        <a href="/tags" class="block">All Tags</a>
                    </li>
                    <li class="text-sm px-2 py-4 hover:bg-green-500 transition duration-300">
                        <a href="/contact" class="block">Contact</a>
                    </li>
                    <li class="text-sm px-2 py-4 hover:bg-green-500 transition duration-300">
                        <a href="/cv" class="block">CV</a>
                    </li>
                    <li class="text-sm px-2 py-4 hover:bg-green-500 transition duration-300">
                        <a href="/impossible-list" class="block">Impossible List</a>
                    </li>
            </ul>
        </div>
    </div>
</nav>

</header>

<main class="mx-auto max-w-prose p-4 prose prose-xl prose-purple">
    <h1 class="text-center">Testing endpoints protected with an XSRF token in Postman</h1>
    <div class="flex flex-col min-h-screen">
        <article class="prose-code:bg-slate-400">
            
<div class="prose-sm italic ">
    <div class="flex justify-evenly items-center">
        <time datetime="2019-05-17">May 17, 2019</time>
        <i class="font-bold">
            Reading Time: 4 min
        </i>
    </div>

    <div class="flex flex-row flex-wrap gap-1 place-content-center">
            <a href="/tags/postman" class="block flex-initial border-2 border-black m-2 rounded-xl p-2 bg-gray-200 shadow-md">Postman</a>
            <a href="/tags/testing" class="block flex-initial border-2 border-black m-2 rounded-xl p-2 bg-gray-200 shadow-md">testing</a>
            <a href="/tags/tutorial" class="block flex-initial border-2 border-black m-2 rounded-xl p-2 bg-gray-200 shadow-md">tutorial</a>
            <a href="/tags/security" class="block flex-initial border-2 border-black m-2 rounded-xl p-2 bg-gray-200 shadow-md">security</a>
    </div>
</div>

<html><head></head><body><p>Using an anti-forgery token is a pretty standard way of securing your website from XSRF(Cross-Site Request Forgery) attacks. However, it does make it challenging to use Postman to test your ajax endpoints. Without the correct token in your request, you will get a <em><strong>401 Unauthorized</strong></em> error.</p>
<p>This is something I ran into recently. So, what did I do?</p>
<h2 id="preamble">Preamble</h2>
<p>I guess I could disable the validation for testing purposes. For a long time, I did precisely that. My super-scientific process was comprised of the following steps.</p>
<ol>
<li>Disable the validation by commenting out the validating code.</li>
<li>Rebuild the solution.</li>
<li>Start the local server.</li>
<li>Test using Postman. Make fixes if required.</li>
<li>Re-enable validation.</li>
<li>Rebuild code.</li>
<li>Ship.</li>
</ol>
<p>Now, I don't know about you, but just looking at that makes me sad, and it's not just because it doesn't allow me to test the endpoints on the deployed code. And no, deploying code with validation turned off just for testing purposes is not something I want to do.</p>
<p>I couldn't stop thinking that there had to be a better way to do this. Indeed, I was not the only one who would want to do this. So, I did what any good engineer does - Open my browser and search stack overflow and google. I found a few articles, but none of them worked for me.</p>
<p>Since I am writing this article, something worked for me, but before we get into what worked, for the uninitiated, some background.</p>
<h2 id="what-is-xsrf-aka-csrf-aka-sea-surf-aka-cross-site-request-forgery">What is XSRF aka CSRF aka Sea Surf aka Cross-Site Request Forgery?</h2>
<p>XSRF vulnerabilities occur when a website allows an authenticated user to perform a sensitive action but does not verify that the user is invoking that action. Instead, they verify only that the request came from the browser of an authorized user.</p>
<p>This can open up the website to an attack where the user has a validated auth cookie stored in their browser.</p>
<p>The most common way to prevent CSRF attacks is to use a CSRF-token</p>
<h2 id="what-is-an-anti-forgery-xsrf-token">What is an anti-forgery (XSRF) token?</h2>
<p>The anti-forgery token is a way to protect against Cross-Site Scripting attacks. It is a unique random key generated for every single HTML form sent to the client.</p>
<p>The way it works is</p>
<ol>
<li>Whenever a user requests a page with form data, the server generates an anti-forgery token which is unique and unpredictable.</li>
<li>The client sends back the token when the form is submitted.</li>
<li>The server validates the token, and if the token does not match, the request is rejected.</li>
</ol>
<h2 id="what-does-the-application-look-like">What does the application look like?</h2>
<p>Our application is built in ASP.NET and uses Razor pages. One of the ways that we can add an anti-forgery token to a Razor page is by using the <code>&#64;&#64;Html.AntiForgeryToken()</code> helper function inside a form. All this does is add a hidden form field containing the token. The form field that is added is similar to</p>
<pre><code class="language-html hljs">&lt;input
    name=&quot;__RequestVerificationToken&quot;
    type=&quot;hidden&quot;
    value=&quot;HCT7cStZ5BVk3sFWdlYRsaPN2K2xUHwRc-AAEn1tIq02yWO1QSUuAiNuH4pCg6M7JgV3xZjysixJHhkqoGhOTTG8bgk0H3VWi5XpJgntnt2uc-xXwXwSOta9hBNMJQxo5JznbmiBtxPkwSx-GqxXsw2&quot;
/&gt;
</code></pre>
<p>Note the name of the hidden input - <strong><em>__RequestVerificationToken</em></strong>. We will need it later.</p>
<p>We are also going to assume that the URL with the form is <em>http://localhost/page</em>. When the user presses the submit button, it posts to <em>http://localhost/page-ajax-action</em>. The form on the page itself has two fields <em>FirstName</em> and <em>LastName</em></p>
<h2 id="yada-yada.but-how-do-i-test">Yada Yada. But how do I test?</h2>
<p>Enough talk; let's start Postman and set it up to test our ajax endpoints.</p>
<h3 id="create-the-environment">Create the environment</h3>
<p><img src="/assets/images/posts/postman-ajax-endpoints-xsrf-tokens/environment.png" alt="Postman environment"></p>
<h3 id="setup-our-request">Setup our request</h3>
<p><img src="/assets/images/posts/postman-ajax-endpoints-xsrf-tokens/post-ajax.png" alt="Postman Post request"></p>
<p>If you are wondering what <em>{{xsrf-token}}</em> means, it's a way to tell Postman that this value will come from the <em>xsrf-token</em> variable.</p>
<h3 id="set-the-anti-forgery-token-variable">Set the anti-forgery token variable</h3>
<p>Now since the anti-forgery token is generated for every request, we can use a Pre-request script to set the value of the <em>xsrf-token</em> environment variable every time we want to hit the ajax endpoint.</p>
<p>This is what our pre-request script will look like</p>
<pre><code class="language-javascript hljs"><span class="hljs-keyword">var</span> url = pm.environment.get(<span class="hljs-string">'baseurl'</span>);
pm.sendRequest(<span class="hljs-string">`<span class="hljs-subst">${url}</span>/login`</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, response</span>) </span>{
    <span class="hljs-keyword">if</span> (err) {
        <span class="hljs-keyword">return</span> <span class="hljs-built_in">console</span>.error(err);
    } <span class="hljs-keyword">else</span> {
        <span class="hljs-keyword">var</span> body = response.text();
        <span class="hljs-keyword">const</span> html = cheerio(body);
        <span class="hljs-keyword">var</span> allInputs = html.find(<span class="hljs-string">'input[name=&quot;__RequestVerificationToken&quot;]'</span>);
        <span class="hljs-keyword">var</span> input = allInputs.first();
        <span class="hljs-keyword">var</span> token = input.val();
        pm.environment.set(<span class="hljs-string">'xsrf-token'</span>, token);
    }
});
</code></pre>
<p>Let's break this down one by one.</p>
<ul>
<li><strong><em>Line 1</em></strong>: We get the <em>baseurl</em> from the environment variables and store it in <em>url</em>.</li>
<li><strong><em>Line 2</em></strong>: We send a request to the login page. We designate the callback function, which receives 2 arguments - an error(if any) and a response.</li>
<li><strong><em>Line 3-4</em></strong>: If there is an error, log the error to the console.</li>
<li><strong><em>Line 6</em></strong>: Get the body from the response object.</li>
<li><strong><em>Line 7</em></strong>: Parse the body using Postman's inbuilt support for Cheerio. To read more about cheerio visit <a href="https://cheerio.js.org/">Cheerio</a></li>
<li><strong><em>Line 8</em></strong>: Use cheerio to find all instances of <code>input[name=&quot;__RequestVerificationToken</code> in the body.</li>
<li><strong><em>Line 9</em></strong>: If there are multiple instances on the page, take the 1st instance.</li>
<li><strong><em>Line 10</em></strong>: Get the value from the input.</li>
<li><strong><em>Line 11</em></strong>: Set the <em>xsrf-token</em> environment variable with the token value.</li>
</ul>
<h3 id="and-now-we-test">And now we Test</h3>
<p>And now, if we send a request, we can get a 200 response back from our ajax endpoint. We can also see what our environment looks like</p>
<p><img src="/assets/images/posts/postman-ajax-endpoints-xsrf-tokens/updated-environment.png" alt="Updated Environment Variable"></p>
<h2 id="conclusion">Conclusion</h2>
<p>This makes it easy to test endpoints protected by a CSRF token.</p>
<p>Was this helpful? Did this work for you? Let me know.</p>
</body></html>



<aside class="hidden md:block mt-12">
        <div class="flex justify-center gap-x-5 ">
            <a class="bg-social-twitter social-button" href="https://twitter.com/intent/tweet?url=https://www.ankursheel.com/blog/postman-ajax-endpoints-xsrf-tokens&text=How%20can%20we%20test%20the%20endpoints%20using%20an%20anti-forgery%20token%20to%20protect%20us%20from%20XSRF%28Cross-Site%20Request%20Forgery%29%20attacks%20in%20Postman via @ankur_sheel" target="_blank" rel="noopener noreferrer">Tweet this Article</a>
            <a class="bg-social-linkedin social-button" href="https://www.linkedin.com/sharing/share-offsite/?url=https://www.ankursheel.com/blog/postman-ajax-endpoints-xsrf-tokens"target="_blank" rel="noopener noreferrer">Share on Linkedin</a>
        </div>
</aside>



        </article>
    </div>
</main>

<footer class="shadow-lg z-10 w-full bg-gray-500 text-white">
    
<div class="flex justify-between items-center max-w-6xl mx-auto px-4 py-3 mt-14">
    <div class="flex">
        <a class="" href="https://twitter.com/ankur_sheel" title="Connect on Twitter" target="_blank" rel="noopener noreferrer">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 15 15" class="h-6">
              <path fill="currentColor" fill-rule="evenodd" d="M7.233 4.696c0-1.727 1.4-3.127 3.127-3.127 1.014 0 1.823.479 2.365 1.175a5.246 5.246 0 0 0 1.626-.629 2.634 2.634 0 0 1-1.148 1.45l.002.003a5.26 5.26 0 0 0 1.5-.413l-.001.002c-.337.505-.76.95-1.248 1.313.026.177.04.354.04.53 0 3.687-2.809 7.975-7.975 7.975a7.93 7.93 0 0 1-4.296-1.26.5.5 0 0 1-.108-.748.45.45 0 0 1 .438-.215c.916.108 1.83-.004 2.637-.356a3.086 3.086 0 0 1-1.69-1.876.45.45 0 0 1 .103-.448 3.07 3.07 0 0 1-1.045-2.31v-.034a.45.45 0 0 1 .365-.442 3.068 3.068 0 0 1-.344-1.416c0-.468.003-1.058.332-1.59a.45.45 0 0 1 .323-.208.5.5 0 0 1 .538.161 6.964 6.964 0 0 0 4.46 2.507v-.044Zm-1.712 7.279a6.936 6.936 0 0 1-2.249-.373 5.318 5.318 0 0 0 2.39-1.042.45.45 0 0 0-.27-.804 2.174 2.174 0 0 1-1.714-.888c.19-.015.376-.048.556-.096a.45.45 0 0 0-.028-.876 2.18 2.18 0 0 1-1.644-1.474c.2.048.409.077.623.084a.45.45 0 0 0 .265-.824 2.177 2.177 0 0 1-.97-1.812c0-.168.003-.317.013-.453a7.95 7.95 0 0 0 5.282 2.376.5.5 0 0 0 .513-.61 2.127 2.127 0 0 1 2.071-2.614c1.234 0 2.136 1.143 2.136 2.432 0 3.256-2.476 6.974-6.975 6.974Z" clip-rule="evenodd"/>
            </svg>
        </a>
        <a class="ml-4" href="https://www.linkedin.com/in/ankursheel" title="View my LinkedIn profile" target="_blank" rel="noopener noreferrer">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="h-6">
              <path fill="currentColor" d="M4.98 3.5C4.98 4.881 3.87 6 2.5 6S.02 4.881.02 3.5C.02 2.12 1.13 1 2.5 1s2.48 1.12 2.48 2.5zM5 8H0v16h5V8zm7.982 0H8.014v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0V24H24V13.869c0-7.88-8.922-7.593-11.018-3.714V8z"/>
            </svg>

        </a>

        <a class="ml-4" href="https://github.com/AnkurSheel" title="Check out my work on Github" target="_blank" rel="noopener noreferrer">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 15 15" class="h-6">
              <path fill="currentColor" fill-rule="evenodd" d="M7.5.85a6.65 6.65 0 0 0-2.102 12.96c.332.061.454-.144.454-.32 0-.159-.006-.576-.01-1.131-1.849.401-2.24-.892-2.24-.892-.302-.768-.738-.973-.738-.973-.604-.412.046-.404.046-.404.667.047 1.018.685 1.018.685.594 1.017 1.557.723 1.936.553.06-.43.232-.723.422-.889-1.477-.168-3.029-.738-3.029-3.287 0-.726.26-1.319.685-1.784-.069-.168-.297-.844.065-1.76 0 0 .558-.179 1.828.681A6.41 6.41 0 0 1 7.5 4.066a6.394 6.394 0 0 1 1.665.223c1.27-.86 1.827-.68 1.827-.68.363.915.135 1.59.066 1.759.427.465.684 1.058.684 1.784 0 2.555-1.555 3.117-3.036 3.282.238.205.45.611.45 1.232 0 .888-.007 1.605-.007 1.823 0 .178.12.385.457.32A6.652 6.652 0 0 0 7.499.85Z" clip-rule="evenodd"/>
            </svg>
        </a>

        <a class="ml-4" href="https://www.buymeacoffee.com/ankursheel" title="Buy Me A Coffee" target="_blank" rel="noopener noreferrer">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="feather feather-coffee h-6" viewBox="0 0 24 24">
              <path d="M18 8h1a4 4 0 0 1 0 8h-1M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8zm4-7v3m4-3v3m4-3v3"/>
            </svg>
        </a>
    </div>
    <div class="copy">
        © AnkurSheel 2021
    </div>
</div>

</footer>


<script src="/assets/js/blog.js"></script>
    <script data-goatcounter="https://ankursheel.goatcounter.com/count" async src="//gc.zgo.at/count.js"></script>



    <script data-name="BMC-Widget" data-cfasync="false" src="https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js" data-id="ankursheel" data-description="Support me on Buy me a coffee!" data-message="Did you learn something or find this summary interesting? Buy me a coffee" data-color="#40DCA5" data-position="Right" data-x_margin="18" data-y_margin="18"></script>


</body>
</html>
