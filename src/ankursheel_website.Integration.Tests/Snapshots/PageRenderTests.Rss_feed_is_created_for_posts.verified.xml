<?xml version="1.0" encoding="utf-16"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Ankur Sheel</title>
    <link>https://www.ankursheel.com/</link>
    <description>I go down rabbit holes and blog about them</description>
    <copyright>2024</copyright>
<pubDate>pubDate</pubDate>
<lastBuildDate>lastBuildDate</lastBuildDate>
    <item>
      <title>WordWhiz Update #3</title>
      <link>https://www.ankursheel.com/blog/wordhwhiz-update-3</link>
      <description>WordWhiz Update 3 adds a help button and 100 words</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/wordhwhiz-update-3/help-button.jpg" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/wordhwhiz-update-3</guid>
      <pubDate>Sat, 03 Feb 2024 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;You can see all the related updates &lt;a href="https://www.ankursheel.com/tags/wordwhiz"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Those of you who downloaded the 1st early access version might have noticed an update in the test flight app over the holidays 🎉&lt;/p&gt;
&lt;h2 id="more-words-more-fun"&gt;🚀 More Words, More Fun&lt;/h2&gt;
&lt;p&gt;I am thrilled to announce that the game now boasts a whopping 100 words! 📬&lt;/p&gt;
&lt;h2 id="introducing-the-help-button"&gt;📜 Introducing the Help Button&lt;/h2&gt;
&lt;p&gt;Say goodbye to confusion! Explore the newly added Help Button right on the game screen. No need to restart the app — clarify the colour's meanings and game rules instantly&lt;/p&gt;
&lt;div style="position: relative;width: 100%;padding-bottom: 56.25%;margin: 1rem 0;"&gt;
  &lt;iframe src="https://www.youtube.com/embed/X71OQlezrpE" title="WordWhiz Help Button" style="position: absolute;width: 100%;height: 100%;left: 0;top: 0;right: 0;" allowfullscreen=""&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id="public-roadmap-unveiled"&gt;📬 Public Roadmap Unveiled&lt;/h2&gt;
&lt;p&gt;Your voice matters! Check out the new &lt;a href="https://changemap.co/transient-toys/wordwhiz/"&gt;public roadmap&lt;/a&gt;, your hub for suggesting and voting on new features.&lt;/p&gt;
&lt;h2 id="whats-next"&gt;🔮 What's Next&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This marks the final free version. We will soon be on the app store as a paid game. If there is someone you know who would love to try the game before that, please share the link to the &lt;a href="https://tally.so/r/wverVQ"&gt;form&lt;/a&gt; ✨&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Does your child have a favorite word they would like to see in the game? Let me know&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Level Up Your Pull Requests: The Value of Individual Commits</title>
      <link>https://www.ankursheel.com/blog/level-up-your-pull-requests-value-individual-commits</link>
      <description>Uncover the secrets to effective pull requests. From clear histories to efficient reviews, find out why this is a must for every developer.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/level-up-your-pull-requests-value-individual-commits/images/commit-history.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/level-up-your-pull-requests-value-individual-commits</guid>
      <pubDate>Mon, 27 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;&lt;em&gt;This is an edited version of an article I originally wrote for the internal blog at Atlassian.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As a Pull Request(PR) reviewer, my main goal is to be as confident as possible about the outcomes once the PR gets merged. To accomplish this, I want to be able to answer 3 questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Do these changes fulfil the requirements?&lt;/li&gt;
&lt;li&gt;Do these changes improve the current state?&lt;/li&gt;
&lt;li&gt;Could these changes potentially lead to an incident?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Achieving a high level of confidence often proves challenging when dealing with a PR that consists of a single commit with a large diff.&lt;/p&gt;
&lt;p&gt;If you've ever received such a PR, you've likely stared at it, wondering where to begin. This confusion is often followed by your decision to set it aside for later, only to be reminded by the author again.&lt;/p&gt;
&lt;img src="https://media3.giphy.com/media/bGgsc5mWoryfgKBx1u/giphy.gif" width="480" height="480"&gt;
&lt;p&gt;What if I told you that this issue could be resolved with a minor adjustment in the way we create a PR?&lt;/p&gt;
&lt;p&gt;Split the commit into &lt;strong&gt;small&lt;/strong&gt; &lt;strong&gt;individual&lt;/strong&gt; commits that make &lt;strong&gt;logical sense&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The key is to ensure that each commit makes sense on its own and represents a single logical change.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="why-should-you-opt-for-multiple-commits-instead-of-a-single-large-commit"&gt;Why should you opt for multiple commits instead of a single large commit?&lt;/h2&gt;
&lt;p&gt;Some might argue that they review all PRs as one comprehensive diff; therefore, spending time creating smaller commits is a waste of time.&lt;/p&gt;
&lt;p&gt;Leaving apart the fact that having smaller commits does not preclude reviewing a PR as a single diff, breaking down even a small PR into multiple, well-structured commits is still beneficial.&lt;/p&gt;
&lt;h3 id="clear-and-understandable-history"&gt;Clear and Understandable History&lt;/h3&gt;
&lt;p&gt;Multiple small commits create a clear and understandable history.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just as we aim to follow the single responsibility principle in programming, we should also apply it to our commits.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Each commit should represent a single logical change. This makes it easier for any team member to understand the thought process and the steps taken to arrive at the final code.&lt;/p&gt;
&lt;p&gt;It's similar to reading a well-structured book versus a convoluted, rambling essay.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;See “What to Split into its own commit” below.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="improve-debugging-and-trouble-shooting-efficiency"&gt;Improve Debugging and Trouble-shooting Efficiency&lt;/h3&gt;
&lt;p&gt;Small commits come to the rescue when bugs creep into the system.&lt;/p&gt;
&lt;p&gt;With large commits, finding the issue is like searching for a needle in a haystack. However, with small commits, since each commit represents a single logical change, it's much easier to pinpoint the offending code.&lt;/p&gt;
&lt;p&gt;Small commits also work well with tools like &lt;code&gt;git-bisect&lt;/code&gt;, making the debugging process more efficient and less time-consuming.&lt;/p&gt;
&lt;h3 id="increase-code-review-efficiency"&gt;Increase Code Review Efficiency&lt;/h3&gt;
&lt;p&gt;Multiple commits make code review more manageable and effective.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/level-up-your-pull-requests-value-individual-commits/review-twitter.jpg" alt="Twitter screenshot"&gt;&lt;/p&gt;
&lt;p&gt;Reviewers can focus on a single small change at a time, ensuring a more thorough review and reducing the likelihood of overlooking potential issues. It also eases the cognitive load on the reviewer, as they don't have to grasp many changes at once, enabling them to provide more insightful feedback.&lt;/p&gt;
&lt;h3 id="faster-reviews"&gt;Faster Reviews&lt;/h3&gt;
&lt;p&gt;Well-structured commits provide reviewers with natural stopping points.&lt;/p&gt;
&lt;p&gt;If it's a large PR, the reviewer will have to block a chunk of time to review it. But, with individual commits, they might be able to look at the PR in shorter blocks, leading to a faster turnaround time.&lt;/p&gt;
&lt;h3 id="promote-work-transparency"&gt;Promote Work Transparency&lt;/h3&gt;
&lt;p&gt;Multiple commits offer a transparent view of the work progress. Each commit denotes a step forward, indicating productivity and makes it easy to get preliminary reviews on WIPs.&lt;/p&gt;
&lt;p&gt;This ability to get feedback early means that you spend less time going in the wrong direction for too long and avoid expensive rewrites.&lt;/p&gt;
&lt;h3 id="minimises-risk"&gt;Minimises Risk&lt;/h3&gt;
&lt;p&gt;Multiple commits help minimise the risk associated with losing work.&lt;/p&gt;
&lt;p&gt;You always have a saved version to revert to if something goes awry. This is particularly helpful when introducing new features or making significant changes.&lt;/p&gt;
&lt;h3 id="enable-pr-splitting"&gt;Enable PR Splitting&lt;/h3&gt;
&lt;p&gt;Having individual (logical unit) commits will naturally contribute to the ability to split PRs.&lt;/p&gt;
&lt;h3 id="reduce-annotation-needs"&gt;Reduce Annotation Needs&lt;/h3&gt;
&lt;p&gt;Smaller, well-structured commits also diminish the necessity for annotating a PR with comments to help reviewers understand it better.&lt;/p&gt;
&lt;p&gt;Once you have commits that are logical units, it becomes easier to write commit messages that are clear and specific. This allows the reviewer to understand the progression of the changes and sometimes can offer clarity as to why certain changes in the PR were made.&lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; I have blurred out the images since the code and the commit messages itself are not important.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First&lt;/strong&gt;, Which is more straightforward to understand - A single commit message saying "&lt;em&gt;&lt;strong&gt;fixed XYZ errors"&lt;/strong&gt;&lt;/em&gt; or this commit history?&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/level-up-your-pull-requests-value-individual-commits/commit-history.png" alt="commit history"&gt;&lt;/p&gt;
&lt;p&gt;Unsurprisingly, I prefer the split commit history.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Next&lt;/strong&gt;, compare and see which diff is simpler to review.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Its the same block of code seen as combined diff view vs commit view.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/level-up-your-pull-requests-value-individual-commits/all-changes-1-commit.png" alt="all changes in 1 commit"&gt;
vs
&lt;img src="https://www.ankursheel.com/assets/images/posts/level-up-your-pull-requests-value-individual-commits/separate-duplication-and-code-changes.png" alt="separate duplication and code changes"&gt;&lt;/p&gt;
&lt;p&gt;Personally, even with the code blurred, I can sense that the 2nd diff is going to be easy to reason about.&lt;/p&gt;
&lt;p&gt;It's also easy to see that although the PR might have a large diff, the actual change is relatively small.&lt;/p&gt;
&lt;h2 id="what-to-split-into-its-own-commit"&gt;What to Split into its own commit&lt;/h2&gt;
&lt;p&gt;Hopefully, by now, you are convinced that individual commits are beneficial.&lt;/p&gt;
&lt;p&gt;But you might be wondering how to split a single giant commit into smaller ones.&lt;/p&gt;
&lt;p&gt;Many types of changes should be split into separate commits. Dare I say that some of them should be their own PR?&lt;/p&gt;
&lt;p&gt;In general, changes belong to two different types of classes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Refactoring&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;These changes are very low risk especially since most IDE’s come with automated refactoring tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Behavioural&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;These changes require more careful reviews.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The key to breaking up a single commit into smaller commits is identifying the parts needed to deliver a ticket. Some of the more common ones include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Refactoring&lt;/li&gt;
&lt;li&gt;Reformatting&lt;/li&gt;
&lt;li&gt;Deleting unused code&lt;/li&gt;
&lt;li&gt;Test improvements&lt;/li&gt;
&lt;li&gt;Introduction of feature flags&lt;/li&gt;
&lt;li&gt;Functional changes&lt;/li&gt;
&lt;li&gt;Adding Observability&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's focus on the "&lt;em&gt;Introduction of Feature Flags&lt;/em&gt;" as an example.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First make the change easy, then make the easy change&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;Kent Beck&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When working on a ticket, the first step usually involves duplicating existing code and placing it behind a feature flag. This duplication should be its own commit, allowing the reviewer to focus on what has changed in the subsequent commits.&lt;/p&gt;
&lt;p&gt;Remember, you can always squash/reorder commits using interactive rebase (&lt;code&gt;git rebase -i&lt;/code&gt;) or cherry pick
(&lt;code&gt;git cherry-pick&lt;/code&gt;) to make a cohesive story &lt;strong&gt;before&lt;/strong&gt; putting up your changes for review.&lt;/p&gt;
&lt;h2 id="questions"&gt;Questions&lt;/h2&gt;
&lt;h3 id="q-shouldnt-the-refactorings-be-their-own-pr"&gt;Q: Shouldn't the refactorings be their own PR?&lt;/h3&gt;
&lt;p&gt;Ideally, Yes. But, it might not be possible if you work on a legacy monolith with a considerable build time. It becomes essential to balance complexity and speed.&lt;/p&gt;
&lt;p&gt;In this case, combining the refactoring commits into the PR made more sense. If the refactorings were more complex or had a lot of changes, it would be better to split them into their own PR.&lt;/p&gt;
&lt;h3 id="q-is-fix-typo-in-variable-name-too-granular"&gt;Q: Is &lt;code&gt;fix typo in variable name&lt;/code&gt; too granular?&lt;/h3&gt;
&lt;p&gt;In the above screenshot, some might argue that the "&lt;em&gt;fix typo in variable name&lt;/em&gt;" commit should be grouped into another commit as it is too granular.&lt;/p&gt;
&lt;p&gt;However, having it as a separate commit is valuable as it is a refactoring rather than a functional change. It allows the reviewer to quickly identify this as just a typo fix.&lt;/p&gt;
&lt;p&gt;If it was in response to a PR review comment, having it as its own commit makes it easier for the reviewer to check that their comment has been addressed.&lt;/p&gt;
&lt;h3 id="q-what-can-you-understand-from-fix-typo-in-variable-name-or-rename-variable-and-add-some-comments"&gt;Q: What can you understand from “fix typo in variable name” or “rename variable and add some comments”?&lt;/h3&gt;
&lt;p&gt;Both these commits signal to the reviewer that these are not behavioural changes.&lt;/p&gt;
&lt;p&gt;This does not mean that the reviewer should not review these commits, but it lets the reviewer know that it should not take too much cognitive load to review.&lt;/p&gt;
&lt;h2 id="shouldnt-we-have-smaller-prs-not-smaller-commits"&gt;Shouldn't we have smaller PR's not smaller commits?&lt;/h2&gt;
&lt;p&gt;Yes, it would be better to have smaller PRs.&lt;/p&gt;
&lt;p&gt;But, if your team is used to reviewing everything as 1 giant diff, it can be hard to get approval if you split a PR into smaller PRs. It can be hard for people to accept that a lot of those PRs on their own probably wont provide value but also won’t break things due to being disabled through feature flags or for other reasons.&lt;/p&gt;
&lt;p&gt;Breaking a PR with one large commit into smaller individual commits that make logical sense provides a nice stepping stone to be able to split into smaller PR's. It is an relatively easier way to build that muscle.&lt;/p&gt;
&lt;h3 id="q-isnt-the-pr-the-smallest-unit-to-understand-why-a-change-is-being-made-so-individual-commits-are-useless"&gt;Q: Isn't the PR the smallest unit to understand why a change is being made, so individual commits are useless?&lt;/h3&gt;
&lt;p&gt;In an ideal world, yes. But, it's easy to fall into the trap of making multiple changes in the same PR because it takes so much time to deploy a PR to production. Having individual commits gives us a nice balance between complexity and speed.&lt;/p&gt;
&lt;p&gt;Taking the analogy of an article, it's like saying we don't need to have sub-headings because the essay must be consumed as one unit. The subheadings/commits make it easier to consume.&lt;/p&gt;
&lt;p&gt;If you want your PRs to be one single commit on merge, it can be achieved by enabling squash commits on merge. After getting approval, you can also use interactive rebase to squash the commits manually.&lt;/p&gt;
&lt;p&gt;I would still strongly suggest that there is value in keeping the individual commits (as long as each commit is a logical unit) so that you can use tools like &lt;code&gt;git bisect&lt;/code&gt; or even eyeball the commit messages to make it easier to find the underlying culprit. Alternatively, you can merge each commit as an individual PR.&lt;/p&gt;
&lt;h3 id="q-is-there-a-middle-ground-between-having-a-single-commit-and-too-many-small-ones"&gt;Q: Is there a middle ground between having a single commit and “too many” small ones?&lt;/h3&gt;
&lt;p&gt;Yes. You can go overboard with too many small commits, and a balance needs to be achieved.&lt;/p&gt;
&lt;p&gt;Having smaller commits doesn't mean that you show every step or that the commits should reflect the edit history. Each commit should make logical sense on its own.&lt;/p&gt;
&lt;p&gt;I have addressed this with the “What to split” section.&lt;/p&gt;
&lt;h3 id="q-isnt-it-problematic-to-review-individual-commits-given-they-can-often-be-part-of-the-developers-journey-of-changing-their-mind-refactoring-and-gaining-insights"&gt;Q: Isn't it problematic to review individual commits, given they can often be part of the developer's journey of changing their mind, refactoring, and gaining insights?&lt;/h3&gt;
&lt;p&gt;Smaller commits doesn't mean you show every step; each commit should be a logical unit that provides value in production. Otherwise, it's just cruft.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Drop it or Squash it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If the author changes their mind, how does that commit provide value to the reviewer or the system in production? The author should be using interactive rebase to squash or drop those commits before putting them up for review.&lt;/p&gt;
&lt;h3 id="q-do-you-have-any-suggestions-for-preparing-atomic-commits"&gt;Q: Do you have any suggestions for preparing atomic commits?&lt;/h3&gt;
&lt;p&gt;Proper planning and upfront thinking of how to break the PR helps, but it is not always possible. I use interactive rebase, cherry-picking and changesets in IntelliJ liberally.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;If this is something you are interested in knowing more about, let me know in the comments.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="q-what-about-making-changes-based-on-review-comments"&gt;Q: What about making changes based on review comments?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Every review should be a snapshot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once a reviewer has reviewed your PR, you should not be making changes to commits that have been reviewed.&lt;/p&gt;
&lt;p&gt;The (new) commits that you make to address the review comments should follow the same rules as above.&lt;/p&gt;
&lt;p&gt;Writing a commit message like "&lt;em&gt;address PR feedback&lt;/em&gt;" and then dumping all the requested changes in 1 commit is not helpful. TBH, even I have been guilty of doing this at times.&lt;/p&gt;
&lt;p&gt;You dont want the reviewer to have to revisit the commits that they have already reviewed but you also want to make it easy for them to ensure that their comments have been addressed correctly.&lt;/p&gt;
&lt;p&gt;I prefer to prefix such commits with &lt;strong&gt;CR:&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id="in-conclusion"&gt;In Conclusion&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s the author’s responsibility to make the code review easy for the reviewer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While it may seem tedious to make frequent small commits and tempting to wait until all the work is completed, the advantages of small commits are significant.&lt;/p&gt;
&lt;p&gt;However, remember that the size of a commit will depend on the context and the nature of the change.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The key is to ensure that each commit makes sense on its own and represents a single logical change.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Breaking a PR with one large commit into smaller individual commits that make logical sense provides a nice stepping stone to be able to split into smaller PR's.&lt;/p&gt;
&lt;p&gt;Is there any reason why we &lt;strong&gt;shouldn't&lt;/strong&gt; be putting in the effort to make smaller commits and writing better commit messages?&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Unity CI/CD Demystified: Part 4: Deploying WebGL Builds to GitHub Pages</title>
      <link>https://www.ankursheel.com/blog/unity-cicd-deploying-webgl-github-pages</link>
      <description>Welcome back to our Unity CI/CD adventure! In Part 4, we'll explore deploying Unity projects to GitHub Pages, making web-based Unity releases easier than ever before.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/unity-cicd-deploying-webgl-github-pages/repository-settings.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/unity-cicd-deploying-webgl-github-pages</guid>
      <pubDate>Mon, 13 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;Welcome back to our Unity CI/CD journey!&lt;/p&gt;
&lt;p&gt;Recapping our previous chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In Part 1 we nailed down the &lt;a href="https://www.ankursheel.com/unity-cicd-one-time-setup"&gt;one time setup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Part 2 saw us setting up the &lt;a href="https://www.ankursheel.com/unity-cicd-trigger-events-tests"&gt;trigger events and running the automated tests&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Part 3 was all about &lt;a href="https://www.ankursheel.com/unity-cicd-linux-build"&gt;creating a reusable workflow&lt;/a&gt;  to build the Unity project for various platforms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, we're all set for Part 4, where we take full advantage of our reusable workflow to deploy a WebGL build to GitHub Pages.&lt;/p&gt;
&lt;p&gt;Our journey begins by updating our &lt;code&gt;.github/workflows/main.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;h2 id="job-1-building-for-webgl"&gt;Job 1: Building for WebGL&lt;/h2&gt;
&lt;p&gt;This job uses our reusable workflow to generate the files needed for hosting the game on a web server.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;buildForWebGL:
  name: Build for WebGL
  needs: test
  if: github.ref == 'refs/heads/main' || github.event.action == 'published' || (contains(github.event.inputs.release_platform, 'release') &amp;amp;&amp;amp; contains(github.event.inputs.release_platform, 'WebGL'))
  uses: ./.github/workflows/buildWithLinux.yml
  with:
    platform: WebGL
    secrets:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;needs&lt;/strong&gt;: This step relies on the successful completion of the &lt;code&gt;test&lt;/code&gt; job, introduced back in Part 2.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;if&lt;/strong&gt;: Defines the conditions for this job to run. It kicks into action when:
&lt;ul&gt;
&lt;li&gt;We're either pushing changes to the main branch or creating a pull request against it.&lt;/li&gt;
&lt;li&gt;Initiate a GitHub release.&lt;/li&gt;
&lt;li&gt;We manually trigger the workflow with the '&lt;strong&gt;&lt;em&gt;release&lt;/em&gt;&lt;/strong&gt;' and '&lt;strong&gt;&lt;em&gt;WebGL&lt;/em&gt;&lt;/strong&gt;' parameters in the &lt;code&gt;release_platform&lt;/code&gt; field.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uses&lt;/strong&gt;: We're calling the reusable workflow from Part 3.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;with&lt;/strong&gt;: We're providing the necessary parameters, setting the &lt;code&gt;platform&lt;/code&gt; to &lt;strong&gt;&lt;em&gt;WebGL&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="job-2-deploying-to-github-pages"&gt;Job 2: Deploying to GitHub Pages&lt;/h2&gt;
&lt;p&gt;This job copies the WebGL artifact to the correct location for &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. Once copied, it triggers a GitHub Pages deployment.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;buildForWebGL:
  name: Build for WebGL
  needs: test
  if: github.ref == 'refs/heads/main' || github.event.action == 'published' || (contains(github.event.inputs.release_platform, 'release') &amp;amp;&amp;amp; contains(github.event.inputs.release_platform, 'WebGL'))
  uses: ./.github/workflows/buildWithLinux.yml
  with:
    platform: WebGL
  secrets:
    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

deployToGitHubPages:
  name: Deploy to GitHub Pages
  runs-on: ubuntu-latest
  needs: buildForWebGL
  if: github.ref == 'refs/heads/main' || github.event.action == 'published' || (contains(github.event.inputs.release_platform, 'release') &amp;amp;&amp;amp; contains(github.event.inputs.release_platform, 'WebGL'))
  steps:
    - name: Echo Build Version
      run: echo ${{ needs.buildForWebGL.outputs.buildVersion }}

    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: false

    - name: Download WebGL Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-WebGL
        path: build/WebGL

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: build/WebGL/WebGL
        commit-message: Deploy
        single-commit: true

    - name: Cleanup to avoid storage limit
      uses: geekyeggo/delete-artifact@v2
      with:
        name: build-WebGL
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;needs&lt;/strong&gt;: This job depends on the successful completion of the &lt;code&gt;buildForWebGL&lt;/code&gt; job.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;if&lt;/strong&gt;:  It follows the same conditions as the buildForWebGL job.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, we have a series of steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Echo Build Version&lt;/strong&gt;: Prints the build version generated by the &lt;code&gt;buildForWebGL&lt;/code&gt; job.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Checkout Repository&lt;/strong&gt;: Checks out the code repository.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Download WebGL Artifact&lt;/strong&gt;: This action fetches the &lt;strong&gt;_build-WebGL&lt;/strong&gt;_ artifact produced by the &lt;code&gt;buildForWebGL&lt;/code&gt; job and places it into the &lt;strong&gt;_build/WebGL&lt;/strong&gt;_ directory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy to GitHub Pages&lt;/strong&gt;: We deploy the contents of the &lt;strong&gt;_build/WebGL/WebGL&lt;/strong&gt;_ folder to GitHub Pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cleanup to avoid storage limit&lt;/strong&gt;: Lastly, we clean up by deleting the &lt;strong&gt;_build-WebGL-&lt;/strong&gt; artifact, ensuring we don't hog unnecessary storage space.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="setting-up-github-pages"&gt;Setting up Github Pages&lt;/h2&gt;
&lt;p&gt;Once the workflow for a WebGL build is triggered, a gh_pages branch will be created. Now we can setup Github pages to showcase our game.&lt;/p&gt;
&lt;p&gt;In the repository on GitHub, navigate to &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Pages&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Set the source to &lt;strong&gt;&lt;em&gt;Deploy from a branch&lt;/em&gt;&lt;/strong&gt; and set the branch to &lt;code&gt;gh-pages&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-cicd-deploying-webgl-github-pages/repository-settings.png" alt="Repository Settings"&gt;&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Stay tuned for Part 5, where we'll cover how to generate certificates for iOS deployments.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow"&gt;Calling a reusable workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marketplace/actions/github-pages-deploy-action"&gt;Github Pages Deploy Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marketplace/actions/delete-artifact"&gt;Delete Artifact Github Action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>2023 - Q3 Retrospective</title>
      <link>https://www.ankursheel.com/blog/2023-q3-retrospective</link>
      <description>At the start of the quarter, I laid out some high-level goals. Here’s how I did against those goals.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/2023-q3-retrospective/cover.jpeg" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/2023-q3-retrospective</guid>
      <pubDate>Mon, 30 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;At the start of the quarter, I laid out some high-level personal goals. Here’s how I did against those goals.&lt;/p&gt;
&lt;h4 id="goal-publish-3-blog-posts"&gt;Goal: Publish 3 blog posts&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: I published 4 posts&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How it went&lt;/strong&gt;: &lt;span style="color: green;"&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I published 4 posts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ankursheel.com/unity-personal-license-manual-activation-workaround"&gt;Workaround for Unity Personal License Manual Activation Not Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ankursheel.com/cleaning-up-unnecessary-remote-tracking-references"&gt;Cleaning Up Unnecessary Remote-Tracking References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ankursheel.com/unlock-your-careers-potential-effective-11-meetings"&gt;Unlock your career's potential with effective 1:1 meetings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ankursheel.com/unity-cicd-one-time-setup"&gt;Unity CI/CD Demystified: Part 1: One-Time Setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also refreshed an old post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ankursheel.com/rent-buy-house"&gt;Should I Rent Or Buy a House?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="goal-publish-3-book-summaries"&gt;Goal: Publish 3 book summaries&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: I didnt finish even a single book summary&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How it went&lt;/strong&gt;: &lt;span style="color: red;"&gt;FAILURE&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I need to take out time to write a book summary a month. Maybe I should have spent some time on book summaries instead of the 4th post.&lt;/p&gt;
&lt;h3 id="goal-explore-ideas-for-a-new-game"&gt;Goal: Explore ideas for a new game&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: I settled on creating a Wordle for Kids and reached out to a few people to gauge interest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How it went&lt;/strong&gt;: &lt;span style="color: orange;"&gt;MEH&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I created a MVP for a 4 letter wordle clone. I shared a &lt;a href="https://tally.so/r/wverVQ"&gt;form&lt;/a&gt; on social media to gauge interest for a Wordle for Kids game. Although, I did not get as many responses as I would have liked, it was enough to validate that people are interested in having an app that has kid appropriate 4 letter words.&lt;/p&gt;
&lt;h2 id="goals-for-next-month"&gt;Goals for next month&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Publish 3 blog posts on ankursheel.com&lt;/li&gt;
&lt;li&gt;Publish 3 book summaries on discoveriesinbookland.com&lt;/li&gt;
&lt;li&gt;Get WordWhiz in the hands of beta testers and get the 1st release out&lt;/li&gt;
&lt;li&gt;Get 10 more responses to the WordWhiz form&lt;/li&gt;
&lt;li&gt;Lose 5 kgs&lt;/li&gt;
&lt;li&gt;25 consecutive pushups&lt;/li&gt;
&lt;li&gt;50 consecutive squats&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Unity CI/CD Demystified: Part 3: Build with Linux</title>
      <link>https://www.ankursheel.com/blog/unity-cicd-linux-build</link>
      <description>In Part 3 of our Unity CI/CD series, we delve into creating a reusable workflow to build Unity projects for different platforms.</description>
      <guid>https://www.ankursheel.com/blog/unity-cicd-linux-build</guid>
      <pubDate>Mon, 23 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;Welcome back to our Unity CI/CD journey.&lt;/p&gt;
&lt;p&gt;In Part 1, we nailed down the &lt;a href="https://www.ankursheel.com/unity-cicd-one-time-setup"&gt;One-Time Setup for Unity CD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In Part 2, we set the &lt;a href="https://www.ankursheel.com/unity-cicd-trigger-events-tests"&gt;Trigger Events and Automation Testing for Unity CD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's time for Part 3, where we will create a reusable workflow to build the Unity project for various platforms. The jobs in this workflow will run on a Linux VM.&lt;/p&gt;
&lt;p&gt;Why Linux? Its the cheapest box. As we will see in later posts, different platforms need different VM for deployment. I am looking at you iOS.&lt;/p&gt;
&lt;p&gt;Let's kick things off with creating a new workflow definition &lt;code&gt;.github/workflows/buildWithLinux.yml&lt;/code&gt;:&lt;/p&gt;
&lt;h2 id="defining-the-workflow"&gt;Defining the Workflow&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;name: Build with Linux  
on:  
  workflow_call:   
    inputs:   
      platform:  
        required: true  
        type: string  
      secrets:  
        UNITY_EMAIL:  
          required: true  
        UNITY_PASSWORD:  
          required: true  
        UNITY_LICENSE:  
          required: true  
    outputs:  
      buildVersion:  
        value: ${{ jobs.buildWithLinux.outputs.buildVersion }} 
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;on&lt;/strong&gt;: In this section, we specify the events that trigger our CI/CD workflow.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;workflow_call&lt;/strong&gt;: This lets the runner know that this workflow is reusable and can be called from other workflows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inputs&lt;/strong&gt;: These are the values passed in from the caller workflow and referenced in the job.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;platform&lt;/strong&gt;: Specifies the platform for which the Unity project should be built. This is crucial because Unity optimizes the build for the target platform and creates the appropriate files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;secrets&lt;/strong&gt;: These are the secrets passed in from the caller workflow and used in the job.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;outputs&lt;/strong&gt;: Data that we want to pass back to the caller workflow.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;buildVersion&lt;/strong&gt;: The version generated by the job.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="inside-the-linux-build-job"&gt;Inside the Linux Build Job&lt;/h2&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;jobs:  
  
  buildWithLinux:  
    name: Build in Linux for ${{ inputs.platform }}  
    runs-on: ubuntu-latest  
    outputs:  
      buildVersion: ${{ steps.build.outputs.buildVersion }}  
      steps:  
      - name: Checkout Repository  
        uses: actions/checkout@v3  
        with:  
          fetch-depth: 0  
          lfs: true  
  
      - name: Cache Library  
        uses: actions/cache@v3  
        with:  
          path: Library  
          key: Library-build-${{ inputs.platform }}  
          restore-keys: |  
            Library-build- ${{ inputs.platform }}
            Library-    
      - name: Build Unity Project  
        id: build  
        uses: game-ci/unity-builder@v3  
        env:  
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}  
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}  
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}  
        with:  
          targetPlatform: ${{ inputs.platform }}  
  
      - name: Upload Build  
        uses: actions/upload-artifact@v3  
        with:  
          name: build-${{ inputs.platform }}  
          path: build/${{ inputs.platform }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here's a breakdown of what's happening in this job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;outputs&lt;/strong&gt;: Data we want to use in the caller workflow.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;buildVersion&lt;/strong&gt;: The version generated by the Builder in the &lt;code&gt;build&lt;/code&gt; step below.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;steps:&lt;/strong&gt; This section contains a series of steps to be executed for this job.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Checkout Repository:&lt;/strong&gt; This step checks out our code repository. We're diving deep into the Git history with a fetch depth of 0 and grabbing those Git Large File Storage (LFS) files with the &lt;code&gt;lfs: true&lt;/code&gt; flag.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cache Library:&lt;/strong&gt; This step caches the "Library" directory, making subsequent runs faster. We specify the directory path, a key for the cache, and the keys to look for when restoring the cache.  We ensure that the &lt;code&gt;key&lt;/code&gt; is unique to each platform, allowing the job to retrieve the correct cache.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build Unity Project&lt;/strong&gt;: In this step, we build the Unity project and set the variables that have been passed in from the caller workflow&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload Build&lt;/strong&gt;: Upload the built Unity project as an artifact so it can be downloaded in later jobs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With this workflow in place, we're one step closer to mastering CI/CD for Unity. Stay tuned for Part 4, where we'll cover using this workflow to build and deploy the WebGL build on GitHub pages.&lt;/p&gt;
&lt;p&gt;Happy building!&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/using-workflows/reusing-workflows#creating-a-reusable-workflow"&gt;Creating a reusable workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs"&gt;Defining Outputs for a job&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://game.ci/docs/github/builder#configuration-options"&gt;GameCI builder Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://game.ci/docs/github/builder#outputs"&gt;GameCI builder Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>WordWhiz Update #2</title>
      <link>https://www.ankursheel.com/blog/wordwhiz-update-2</link>
      <description>WordWhiz Update 2 updates the colors and adds a new instruction page</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/wordwhiz-update-2/instructions.jpg" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/wordwhiz-update-2</guid>
      <pubDate>Mon, 16 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;You can see all the related updates &lt;a href="https://www.ankursheel.com/tags/wordwhiz"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am thrilled to share some updates for the WordWhiz game! 🎉&lt;/p&gt;
&lt;h2 id="testflight-approval"&gt;🚀 Testflight Approval&lt;/h2&gt;
&lt;p&gt;The first version with around 25 words has received the green light for TestFlight! If you registered as beta tester for iOS, watch your inbox for those invites - they're coming soon! 📬 . If you didnt, you can register by filling &lt;a href="https://tally.so/r/wverVQ"&gt;the form&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="updated-colors"&gt;🌈 Updated Colors&lt;/h2&gt;
&lt;p&gt;I have revamped the colors! Let me know if you have any suggestions on better colors. Share your ideas with me! 🎨&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/wordwhiz-update-2/updated_colors.jpg" alt="Updated Colors"&gt;&lt;/p&gt;
&lt;h2 id="instructions-page"&gt;📜 Instructions Page&lt;/h2&gt;
&lt;p&gt;I have added a new instructions page at the start of the game for people who are new to Wordle.📘&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/wordwhiz-update-2/instructions.jpg" alt="Instructions"&gt;&lt;/p&gt;
&lt;h2 id="whats-next"&gt;🔮 What's Next&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A public Trello board for the roadmap, so beta testers can vote on what they would like to see next.&lt;/li&gt;
&lt;li&gt;More Words&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I encourage you to spread the word and share the excitement with fellow parents and educators who would love to join in on the magic. Please share the &lt;a href="https://tally.so/r/wverVQ"&gt;link to the form&lt;/a&gt; ✨&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Unity CI/CD Demystified: Part 2: Trigger Events and Running Tests</title>
      <link>https://www.ankursheel.com/blog/unity-cicd-trigger-events-tests</link>
      <description>Adding CI/CD to Unity projects is a game-changer even if you're not a CI/CD enthusiast. Part 2 focuses on workflow triggers and running automated tests.</description>
      <guid>https://www.ankursheel.com/blog/unity-cicd-trigger-events-tests</guid>
      <pubDate>Mon, 09 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;Welcome back to our Unity CI/CD journey. In Part 1, we nailed down the &lt;a href="https://www.ankursheel.com/unity-cicd-one-time-setup"&gt;one-time setup to kickstart our CI/CD pipeline&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's time for Part 2, where we'll delve into the nitty-gritty of the events to trigger our workflow and running our automated tests.&lt;/p&gt;
&lt;p&gt;Let's dive in!&lt;/p&gt;
&lt;h2 id="update.gitignore"&gt;Update .gitignore&lt;/h2&gt;
&lt;p&gt;Before we create our workflow, we need tp ignore the files generated by GameCI. Update the &lt;code&gt;.gitignore&lt;/code&gt; file with these lines:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/[Aa]rtifacts/
/[Cc]odeCoverage/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="setting-the-trigger-events"&gt;Setting the Trigger Events&lt;/h2&gt;
&lt;p&gt;First, we need to define when our CI/CD pipeline should kick into action.&lt;/p&gt;
&lt;p&gt;We'll do this in a file named &lt;code&gt;.github/workflows/main.yml&lt;/code&gt;. with the following workflow definition:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;name: Test, Build, and Deploy with GameCI
on:
  push:
    branches:
      - main
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
  release:
    types:
      — published
  workflow_dispatch:
    inputs:
      release_platform:
        description: 'Release to [iOS, WebGL, testFlight]'
        required: false
        default: ''
jobs:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A lot is going on here, but let's break it down:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;on&lt;/strong&gt;: This section is where we specify the events that trigger our CI/CD workflow.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;push&lt;/strong&gt;: Our workflow will fire up when there's a push event to the "main" branch. We are also filtering this down to specific paths within our repo. We're only interested if changes happen in the actual Unity project. Anything else, and our CI/CD pipeline ignores them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pull_request&lt;/strong&gt;: Our workflow also triggers when a pull request is opened or synchronized (updated) in the "main" branch. And yes, we're narrowing it down to those same paths.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;release&lt;/strong&gt;: The workflow is also triggered when we publish a release.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;workflow_dispatch&lt;/strong&gt; lets us manually trigger our workflow through the GitHub Actions interface. We have an input field named **release_platform
**, which allows us to specify where to release our project. This input will help us run only the necessary jobs. Perfect for testing intermediate builds that aren't meant for customer's eyes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="building-and-running-tests"&gt;Building and Running Tests&lt;/h2&gt;
&lt;p&gt;With the stage set, let's get to the real action - building and running our Unity project tests.&lt;/p&gt;
&lt;p&gt;This job is the most important one, as it is responsible for running the &lt;a href="https://docs.unity3d.com/Manual/testing-editortestsrunner.html"&gt;unit tests&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;test:
  name: Build and Run Tests
  runs-on: ubuntu-latest
  steps:
    # Checkout with lfs
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true

    - name: Cache Library
      uses: actions/cache@v3
      with:
        path: Library
        key: Library-test
        restore-keys: |
          Library-test
  
    - name: Run Tests
      uses: game-ci/unity-test-runner@v2
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let's dissect this job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;runs-on:&lt;/strong&gt; We specify that this job should run on an Ubuntu-based runner using the latest available version.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;steps:&lt;/strong&gt; This section contains a series of steps to be executed for this job.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Checkout Repository:&lt;/strong&gt; This step checks out our code repository. We're diving deep into the Git history with a fetch depth of 0 and grabbing those Git Large File Storage (LFS) files with the &lt;code&gt;lfs: true&lt;/code&gt; flag.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cache Library:&lt;/strong&gt; This step caches the "Library" directory, making subsequent runs faster. We specify the directory path, a key for the cache, and the keys to look for when restoring the cache.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run Tests:&lt;/strong&gt; This step runs our Unity tests.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;env&lt;/strong&gt;:  Used to set the environment variables
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UNITY_LICENSE&lt;/strong&gt;: It sets the Unity license environment variable to the value stored securely in secrets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;githubToken&lt;/strong&gt;: Since this action needs GitHub access to report the test results, it uses the GitHub token stored in secrets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="preparing-the-project"&gt;Preparing the Project&lt;/h2&gt;
&lt;p&gt;If the project builds in the editor but fails when we run the workflow, its likely because of missing packages.&lt;/p&gt;
&lt;p&gt;Luckily, its a simple fix.&lt;/p&gt;
&lt;h3 id="verify-packages"&gt;Verify Packages&lt;/h3&gt;
&lt;p&gt;Ensure that these entries are present in &lt;code&gt;packages/manifest.json&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.unity.2d.sprite&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.unity.inputsystem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.unity.test-framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.unity.textmeshpro&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If any of these packages are missing, add them using the Unity Package Manager. Remember to commit the changes in &lt;code&gt;packages/manifest.json&lt;/code&gt; and &lt;code&gt;packages/package-lock.json&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Stay tuned for Part 3, where I'll cover building the project to target different platforms.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows"&gt;Events that trigger workflows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://game.ci/docs/github/test-runner"&gt;GameCI TestRunner docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Unity CI/CD Demystified: Part 1: One-Time Setup</title>
      <link>https://www.ankursheel.com/blog/unity-cicd-one-time-setup</link>
      <description>Adding CI/CD to Unity projects is a game-changer even if you're not a CI/CD enthusiast. Part 1 covers the one-time setup for a successful CI/CD pipeline</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/unity-cicd-one-time-setup/adding_secrets.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/unity-cicd-one-time-setup</guid>
      <pubDate>Tue, 02 Apr 2024 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;Adding CI/CD to Unity projects is a game-changer, even if you're not a CI/CD enthusiast.&lt;/p&gt;
&lt;p&gt;In this series, I'll guide you through setting up a robust CI/CD pipeline for Unity projects using &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; and &lt;a href="https://game.ci/"&gt;GameCI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Part 1 of this series covers the essential one-time setup for a successful CI/CD pipeline.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: These setup steps can be skipped if you've already performed them for a previous project.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="acquire-an-activation-file-for-github-runners"&gt;Acquire an Activation File for GitHub Runners&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Log into Unity Hub&lt;/li&gt;
&lt;li&gt;If we havent already created a licence, we need to get a licence by going to &lt;em&gt;Unity Hub&lt;/em&gt; &amp;gt; &lt;em&gt;Manage Licenses&lt;/em&gt; &amp;gt; &lt;em&gt;Add&lt;/em&gt; &amp;gt; &lt;em&gt;Get a free personal license&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="install-ruby"&gt;Install Ruby&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install Ruby from &lt;a href="https://rubyinstaller.org/downloads/"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Verify the installation by running &lt;code&gt;ruby -v&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;em&gt;Bundler&lt;/em&gt; by running &lt;code&gt;gem install bundler&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="setup-codesigning-with-github-actions"&gt;Setup Codesigning with GitHub Actions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create a private GitHub repository to store the certificates and code-signing identities we generate.&lt;/li&gt;
&lt;li&gt;In the private repository, navigate to &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Deploy Keys&lt;/em&gt; -&amp;gt; &lt;em&gt;Add Deploy Key&lt;/em&gt;&lt;br&gt;
&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-cicd-one-time-setup/deploy_key.png" alt="Add a new deploy key"&gt;&lt;/li&gt;
&lt;li&gt;Generate an SSH key. We can use 1Password or use the &lt;code&gt;ssh-keygen&lt;/code&gt; utility.&lt;/li&gt;
&lt;li&gt;Paste the public key (starting with ssh) into the "Key" field.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;&lt;em&gt;Allow write access&lt;/em&gt;&lt;/strong&gt; to enable pushing certificates to the repository.&lt;br&gt;
&lt;img src="https://www.ankursheel.com/add_key.png" alt="Add key"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="generate-a-github-personal-access-token"&gt;Generate a GitHub Personal Access Token&lt;/h3&gt;
&lt;p&gt;We need a Personal Access Token to enable our GitHub Actions to access the private GitHub repository where we'll store our certificates.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Developer Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Personal Access Tokens&lt;/em&gt; -&amp;gt; &lt;em&gt;Tokens (classic)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;em&gt;Generate Token&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-cicd-one-time-setup/generate_personal_access_token.png" alt="Generate Personal Access Token"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Give the token all &lt;strong&gt;&lt;em&gt;repo&lt;/em&gt;&lt;/strong&gt; permissions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-cicd-one-time-setup/token_scopes.png" alt="Token Scopes"&gt;&lt;/p&gt;
&lt;h2 id="setting-up-secrets-for-github-actions"&gt;Setting up Secrets for GitHub Actions&lt;/h2&gt;
&lt;p&gt;On GitHub, navigate to &lt;em&gt;Settings&lt;/em&gt; -&amp;gt; &lt;em&gt;Secrets and Variables&lt;/em&gt; -&amp;gt; &lt;em&gt;Actions&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-cicd-one-time-setup/adding_secrets.png" alt="Adding secrets"&gt;&lt;/p&gt;
&lt;p&gt;Create the following secrets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;UNITY_EMAIL&lt;/strong&gt;: Your Unity login email address.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UNITY_LICENSE&lt;/strong&gt;: The contents of the &lt;em&gt;.ulf&lt;/em&gt; file which can found at &lt;em&gt;&lt;strong&gt;C:\ProgramData\Unity\Unity_lic.ulf&lt;/strong&gt;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UNITY_PASSWORD&lt;/strong&gt;: Your Unity login password.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GH_PAT&lt;/strong&gt;: The Personal Access Token we generated. Make sure that there is an empty newline at the end.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MATCH_PASSWORD&lt;/strong&gt;: This is an additional layer of security required for encrypting/decrypting certificates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MATCH_REPOSITORY&lt;/strong&gt;: The name of the private GitHub repository that will store our certificates in the format &lt;code&gt;organization/repository&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MATCH_DEPLOY_KEY&lt;/strong&gt;: This is the private part of the SSH key we created in the private repository to store our certificates.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I recommend adding these secrets at the organisation level so that we can reuse them across multiple projects. We can then selectively grant access to each secret for specific repositories.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This one-time setup paves the way for a streamlined Unity CI/CD pipeline. Stay tuned for the next steps in our journey. Happy coding!!&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions"&gt;Workflow syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch"&gt;Workflow dispatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions"&gt;Using secrets in GitHub Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys#set-up-deploy-keys"&gt;Setup deploy keys on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Unlock your career's potential with effective 1:1 meetings</title>
      <link>https://www.ankursheel.com/blog/unlock-your-careers-potential-effective-11-meetings</link>
      <description>Navigating 1:1 meetings might seem daunting initially, but you'll soon become a pro with effective preparation and thoughtful questions</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/unlock-your-careers-potential-effective-11-meetings/cover.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/unlock-your-careers-potential-effective-11-meetings</guid>
      <pubDate>Wed, 13 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;When it comes to professional growth, one question often looms large&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What should I discuss in my 1:1 meetings? I often have nothing beyond project updates.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a common concern, and it's crucial to recognise that a 1:1 meeting is more than just a status update session. It's an opportunity to connect with your supervisor, discuss your progress, and express your thoughts and concerns.&lt;/p&gt;
&lt;h2 id="how-to-effectively-prepare-for-a-11"&gt;How to Effectively Prepare for a 1:1&lt;/h2&gt;
&lt;p&gt;Preparation is key to making the most of your 1:1 meetings. Not only does it demonstrate professionalism, but it also maximises the value of your time.&lt;/p&gt;
&lt;p&gt;Taking notes during(or just after) the 1:1 is pivotal for several reasons. It demonstrates active engagement, aids in retaining essential points, and serves as a reference for future discussions. You can easily look at your notes and if for example, you havent spoken about professional growth for a while, you can focus on those questions in the next 1:1.&lt;/p&gt;
&lt;p&gt;I like to have at least 3-5 prepared topics using the questions below as prompts.&lt;/p&gt;
&lt;h3 id="review-previous-meeting"&gt;Review Previous Meeting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Have I made any progress on the action items from the last 1:1?&lt;/li&gt;
&lt;li&gt;Are there any action items from the last 1:1 that I need to follow up with my supervisor?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="brief-project-updates"&gt;Brief Project Updates&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Limit project updates to 1 or 2 minutes unless it's the primary focus. Remember, 1:1s aren't project status meetings.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is the project status on or off track?&lt;/li&gt;
&lt;li&gt;Are there any noteworthy highlights or progress updates (that were not already covered in standups or elsewhere)?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="share-wins"&gt;Share Wins&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What were my key achievements since the last 1:1? &lt;em&gt;Highlight accomplishments that have moved me or the team forward.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;What went exceptionally well?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="identify-challenges"&gt;Identify Challenges&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Are there any decisions I can't make independently and require input?&lt;/li&gt;
&lt;li&gt;Are there current issues I want to see resolved in the coming months?&lt;/li&gt;
&lt;li&gt;Are there any interpersonal tensions with colleagues that I would like to address proactively?&lt;/li&gt;
&lt;li&gt;Are there aspects of team dynamics that concern me?&lt;/li&gt;
&lt;li&gt;What could have gone better?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="discuss-career-growth-and-professional-development"&gt;Discuss Career Growth and Professional Development&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Share any feedback I have received from colleagues or clients.&lt;/li&gt;
&lt;li&gt;Are there any opportunities I am interested in?&lt;/li&gt;
&lt;li&gt;Am I happy with my current project?&lt;/li&gt;
&lt;li&gt;Do I feel like I’m learning? Are there things I feel like I’m not learning that I would like to?&lt;/li&gt;
&lt;li&gt;Request feedback on recent projects or tasks and inquire about areas for improvement. (&lt;em&gt;Note: It's often better to ask for feedback immediately after an event, as waiting until the 1:1 might be too late.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Explore which skills I should focus on developing for my current role and future roles.&lt;/li&gt;
&lt;li&gt;Ask what I could do differently or what behaviours my supervisor doesn't appreciate.&lt;/li&gt;
&lt;li&gt;Inquire about anything I should start doing or stop doing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="flip-the-conversation"&gt;Flip the Conversation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Find out my supervisor's top priorities.&lt;/li&gt;
&lt;li&gt;Ask about any concerns or worries regarding the team.&lt;/li&gt;
&lt;li&gt;Explore how I can better support my supervisor.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="backup-questions"&gt;Backup Questions&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Use this section only when there's nothing else to discuss, and there's time.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share any interesting updates, lessons, or personal achievements.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="share-your-11-experiences-and-tips"&gt;Share Your 1:1 Experiences and Tips&lt;/h2&gt;
&lt;p&gt;Navigating 1:1 meetings might seem daunting initially, but you'll soon become a pro with effective preparation, thoughtful questions, and diligent follow-ups. Remember, there's no such thing as a perfect 1:1 meeting.&lt;/p&gt;
&lt;p&gt;We're all on a learning journey, and your experiences and tips are invaluable. Have you discovered other effective ways to prepare for 1:1s? Are there additional questions that have proven helpful for you? How do you ensure you follow up on action items?&lt;/p&gt;
&lt;p&gt;Share your experiences and insights in the comments below. Your wisdom could be just what I or another reader needs to excel in their 1:1 meetings!&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Cleaning Up Unnecessary Remote-Tracking References</title>
      <link>https://www.ankursheel.com/blog/cleaning-up-unnecessary-remote-tracking-references</link>
      <description>git pull can be slow if you have a lot of remote branches. Remove unnecessary tracking of remote branches to reduce the amount of time spent updating git repositories</description>
      <guid>https://www.ankursheel.com/blog/cleaning-up-unnecessary-remote-tracking-references</guid>
      <pubDate>Fri, 01 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;If your work involves collaborating on a monolithic project with multiple teams, you might find yourself in a situation where you're tracking numerous branches. However, you might soon realise that most of these branches are unnecessary for your specific work. This situation can lead to an avoidable increase in the time you spend updating your project, especially if you're habitually using &lt;code&gt;git pull&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To streamline our Git workflow and save those precious seconds(or minutes), we should clean up those remote-tracking references.&lt;/p&gt;
&lt;h2 id="identifying-the-branches-to-keep"&gt;Identifying the Branches to Keep&lt;/h2&gt;
&lt;p&gt;Before we start removing stuff, we should identify the branches that we want to keep. Typically, these would include the &lt;em&gt;main (or master)&lt;/em&gt; branch and a few select branches we actively work on.&lt;/p&gt;
&lt;p&gt;To get their unique commit hashes, execute the following command, ensuring to replace &lt;strong&gt;&lt;em&gt;origin/main&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;origin/my-branch-1&lt;/em&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;em&gt;origin/my-branch-2&lt;/em&gt;&lt;/strong&gt; with the actual branch names.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;git rev-parse --quiet origin/main origin/my-branch-1 origin/my-branch-2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note: I’m assuming the &lt;em&gt;&lt;strong&gt;origin&lt;/strong&gt;&lt;/em&gt; is the name of the upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;git rev-parse&lt;/code&gt; command translates human-readable branch names into cryptic yet significant SHA-1 hashes, which are essentially commit identifiers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;--quiet&lt;/em&gt;&lt;/strong&gt;: Silence is golden, as this flag suppresses output unless there is an error.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When executed, the command will produce an output similar to this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-text"&gt;3896d7ba4b5549e8a362bc5e300a0dd8082f9e94
3896d7ba4b5549e8a362bc5e300a0dd8082f9e94
64abe6831bf1cb04396d1df02dd7c2ad6d999ab3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are the commit hashes associated with the branches we wish to retain.&lt;/p&gt;
&lt;h2 id="cleaning-up-unnecessary-local-references"&gt;Cleaning Up Unnecessary Local References&lt;/h2&gt;
&lt;p&gt;Now that we have the commit hashes, we can tidy up our local references to remote branches.&lt;/p&gt;
&lt;p&gt;This can be done by using a combination of 2 commands - &lt;code&gt;git branch&lt;/code&gt; and &lt;code&gt;xargs&lt;/code&gt;. &lt;code&gt;xargs&lt;/code&gt; is a command-line tool that helps build argument lists for other commands.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;git branch -r \ 
--no-contains 3896d7ba4b5549e8a362bc5e300a0dd8082f9e94 \
--no-contains 3896d7ba4b5549e8a362bc5e300a0dd8082f9e94 \
--no-contains 64abe6831bf1cb04396d1df02dd7c2ad6d999ab3 \
| xargs -I{} git branch -rd &amp;quot;{}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let's look at the options for the &lt;code&gt;git branch&lt;/code&gt; command&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;-r&lt;/em&gt;&lt;/strong&gt;: Lists the remote-tracking branches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;--no-contains&lt;/em&gt;&lt;/strong&gt;: Filters the list of remote branches to include only branches that don't contain the specified commits (our identified hashes).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The output of this filtered list is then passed to &lt;strong&gt;&lt;em&gt;xargs&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;em&gt;xargs&lt;/em&gt;&lt;/strong&gt; is a command that allows us to construct argument lists for other commands using input from standard input (stdin).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;-I&lt;/em&gt;&lt;/strong&gt;:  This option tells &lt;code&gt;xargs&lt;/code&gt; to replace every occurrence of &lt;code&gt;{}&lt;/code&gt; with the input elements pulled from standard input (stdin).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;git branch -rd&lt;/em&gt;&lt;/strong&gt;: Deletes a remote branch.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;&amp;quot;&amp;quot;&lt;/em&gt;&lt;/strong&gt;: This is the placeholder, which gets replaced by the specific input item read from stdin.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="preventing-this-buildup-in-the-future"&gt;Preventing this buildup in the future&lt;/h2&gt;
&lt;p&gt;Instead of calling &lt;code&gt;git pull&lt;/code&gt;, use &lt;code&gt;git fetch&lt;/code&gt;  and &lt;code&gt;git rebase&lt;/code&gt; instead.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;git fetch origin main --prune --prune-tags
git rebase origin/main
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;--prune&lt;/em&gt;&lt;/strong&gt;: Before fetching, remove any remote-tracking references that no longer exist on the remote.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;--prune-tags&lt;/em&gt;&lt;/strong&gt;: Before fetching, remove any local tags that no longer exist on the remote if --prune is enabled.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Following these steps, we can declutter our Git workflow and keep only the relevant references.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-branch"&gt;git branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://man7.org/linux/man-pages/man1/xargs.1.html"&gt;xargs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-fetch"&gt;git fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git-rebase"&gt;git rebase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Workaround for Unity Personal License Manual Activation Not Supported</title>
      <link>https://www.ankursheel.com/blog/unity-personal-license-manual-activation-workaround</link>
      <description>A workaround for Unity no longer supporting manual activation of Personal licenses.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/unity-personal-license-manual-activation-workaround/no_longer_supported.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/unity-personal-license-manual-activation-workaround</guid>
      <pubDate>Sun, 20 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;You decided to add a CI/CD pipeline to your Unity Project using &lt;a href="https://game.ci/"&gt;GameCI&lt;/a&gt;. You are all pumped up and
ready to start.&lt;/p&gt;
&lt;p&gt;What's the 1st step? Activating Unity! No biggie, right?&lt;/p&gt;
&lt;p&gt;Well, hold on a sec. You generate the &lt;strong&gt;&lt;em&gt;alf&lt;/em&gt;&lt;/strong&gt; file after creating the github action. You carry on with the list and
head to &lt;a href="https://license.unity3d.com/manual"&gt;https://license.unity3d.com/manual&lt;/a&gt;, all set to create that &lt;strong&gt;&lt;em&gt;ulf&lt;/em&gt;&lt;/strong&gt; file.&lt;/p&gt;
&lt;h2 id="plot-twist"&gt;Plot Twist&lt;/h2&gt;
&lt;p&gt;But hold your horses because here comes the twist.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-personal-license-manual-activation-workaround/no_longer_supported.png" alt="Unity no longer supports manual activation of Personal licenses"&gt;&lt;/p&gt;
&lt;p&gt;Unity dropped a bombshell: "Unity no longer supports manual activation of Personal licenses."&lt;/p&gt;
&lt;p&gt;Manual activation of Personal licenses? Nope, not happening anymore. Cue the dramatic music. 🎵&lt;/p&gt;
&lt;p&gt;But we are not giving up that easily. We disregard the message and upload the &lt;strong&gt;&lt;em&gt;alf&lt;/em&gt;&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;Something's fishy. The option to generate an ulf for a personal license? Poof, it's vanished. Instead, it asks us to
type in a serial number.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-personal-license-manual-activation-workaround/serial_number.png" alt="Activate your license using serial number"&gt;&lt;/p&gt;
&lt;h2 id="time-for-a-bit-of-trickery"&gt;Time for a bit of trickery&lt;/h2&gt;
&lt;p&gt;Right-click and inspect the serial number box&lt;/p&gt;
&lt;p&gt;Now, hunt down the &lt;code&gt;&amp;lt;div class="option option-personal clear" style="display: none;"&amp;gt;&lt;/code&gt; section&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-personal-license-manual-activation-workaround/html_source.png" alt="Html Source"&gt;&lt;/p&gt;
&lt;p&gt;Guess what? We're deleting that pesky &lt;code&gt;"display: none;"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Boom! Like magic, the Unity Personal Edition option reappears. 🎉&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/unity-personal-license-manual-activation-workaround/page_with_personal_license.png" alt="Page With Personal License"&gt;&lt;/p&gt;
&lt;p&gt;Hopefully, before this hack stops working, GameCI will have an official workaround :)&lt;/p&gt;
&lt;h3 id="shoutout"&gt;Shoutout&lt;/h3&gt;
&lt;p&gt;And here's a shoutout to &lt;a href="https://reallpepe.itch.io/defendron"&gt;realpepe&lt;/a&gt;, who cracked the code and shared the wisdom on
Discord. Because in the world of tech, teamwork makes the magic happen.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>WordWhiz Update #1</title>
      <link>https://www.ankursheel.com/blog/wordwhiz-update-1</link>
      <description>WordWhiz Update 1 adds 20 new words and the ability to play a new level on completion</description>
      <guid>https://www.ankursheel.com/blog/wordwhiz-update-1</guid>
      <pubDate>Mon, 07 Aug 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;You can see all the related updates &lt;a href="https://www.ankursheel.com/tags/wordwhiz"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The latest WordWhiz game update, has some great additions.&lt;/p&gt;
&lt;h2 id="new-words"&gt;20 New Words&lt;/h2&gt;
&lt;p&gt;I have curated 20 new words to keep young minds engaged and entertained.&lt;/p&gt;
&lt;h2 id="play-a-new-game-with-randomly-selected-words"&gt;Play a New Game with Randomly Selected Words&lt;/h2&gt;
&lt;p&gt;After completing a level, you can play another level with a randomly selected word&lt;/p&gt;
&lt;div style="position: relative;width: 100%;padding-bottom: 56.25%;margin: 1rem 0;"&gt;
  &lt;iframe src="https://www.youtube.com/embed/_mw6u4SIGWk" title="WordWhiz Next Level" style="position: absolute;width: 100%;height: 100%;left: 0;top: 0;right: 0;" allowfullscreen=""&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id="next-up"&gt;Next Up&lt;/h2&gt;
&lt;p&gt;Add to TestFlight for iPhone Beta Users&lt;/p&gt;
&lt;p&gt;I encourage you to spread the word and share the excitement with fellow parents and educators. They can join the WordWhiz magic by filling out this &lt;a href="https://tally.so/r/wverVQ"&gt;form&lt;/a&gt;.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Transitioning from C# LINQ to Java Streams</title>
      <link>https://www.ankursheel.com/blog/transitioning-c-linq-java-streams</link>
      <description>Transitioning from C# to Java? Mapping C# LINQ functions to Java Streams may seem challenging, but we'll explore their equivalents in this blog post.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/transitioning-c-linq-java-streams/cover.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/transitioning-c-linq-java-streams</guid>
      <pubDate>Sun, 25 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;If you're transitioning from C# to Java, the task of mapping C# LINQ functions to Java Streams can seem challenging
While the core concepts bear similarities, unravelling the nuances of syntax and functionality is crucial for success.&lt;/p&gt;
&lt;p&gt;In this blog post, we will explore the Java equivalents for C# LINQ functions.&lt;/p&gt;
&lt;h2 id="operations"&gt;Operations&lt;/h2&gt;
&lt;h2 id="select-map"&gt;Select / map&lt;/h2&gt;
&lt;p&gt;Transforms each element of a sequence based on a given function.&lt;/p&gt;
&lt;h3 id="c"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var squaredNumbers = numbers.Select(x =&amp;gt; x * x).ToList();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
List&amp;lt;Integer&amp;gt; squaredNumbers = numbers.stream()
                                      .map(x -&amp;gt; x * x)
                                      .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 4, 9, 16, 25]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="where-filter"&gt;Where / filter&lt;/h2&gt;
&lt;p&gt;Filters a sequence based on a specified condition.&lt;/p&gt;
&lt;h3 id="c-1"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var evenNumbers = numbers.Where(x =&amp;gt; x % 2 == 0).ToList();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-1"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
List&amp;lt;Integer&amp;gt; evenNumbers = numbers.stream()
                                   .filter(x -&amp;gt; x % 2 == 0)
                                   .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-1"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[2, 4]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="orderby-sorted"&gt;OrderBy / sorted&lt;/h2&gt;
&lt;p&gt;Sorts the elements of a sequence in ascending order based on a specified key.&lt;/p&gt;
&lt;h3 id="c-2"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 3, 1, 4, 2, 5 };
var sortedNumbers = numbers.OrderBy(x =&amp;gt; x).ToList();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-2"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(3, 1, 4, 2, 5);
List&amp;lt;Integer&amp;gt; sortedNumbers = numbers.stream()
                                     .sorted()
                                     .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-2"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="orderbydescending-sorted"&gt;OrderByDescending / sorted&lt;/h2&gt;
&lt;p&gt;Sorts the elements of a sequence in descending order based on a specified key.&lt;/p&gt;
&lt;h3 id="c-3"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 5, 2, 9, 1, 7 };
var sortedNumbers = numbers.OrderByDescending(n =&amp;gt; n);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-3"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(5, 2, 9, 1, 7);

List&amp;lt;Integer&amp;gt; sortedNumbers = numbers.stream()
                                     .sorted(Comparator.reverseOrder())
                                     .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-3"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[9, 7, 5, 2, 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="groupby-groupingby"&gt;GroupBy / groupingBy&lt;/h2&gt;
&lt;p&gt;Groups the elements of a sequence based on a specified key.&lt;/p&gt;
&lt;h3 id="c-4"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var people = new List&amp;lt;Person&amp;gt;
{
    new Person { Name = &amp;quot;Alice&amp;quot;, Age = 25 },
    new Person { Name = &amp;quot;Bob&amp;quot;, Age = 30 },
    new Person { Name = &amp;quot;Charlie&amp;quot;, Age = 25 }
};
var peopleByAge = people.GroupBy(p =&amp;gt; p.Age);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-4"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Person&amp;gt; people = Arrays.asList(
        new Person(&amp;quot;Alice&amp;quot;, 25),
        new Person(&amp;quot;Bob&amp;quot;, 30),
        new Person(&amp;quot;Charlie&amp;quot;, 25)
);
Map&amp;lt;Integer, List&amp;lt;Person&amp;gt;&amp;gt; peopleByAge = people.stream()
                                               .collect(Collectors.groupingBy(Person::getAge));
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-4"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
    25: [{ Name: &amp;quot;Alice&amp;quot;, Age: 25 }, { Name: &amp;quot;Charlie&amp;quot;, Age: 25 }],
    30: [{ Name: &amp;quot;Bob&amp;quot;, Age: 30 }]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="join-join"&gt;Join / join&lt;/h2&gt;
&lt;p&gt;Combines two sequences based on matching keys.&lt;/p&gt;
&lt;h3 id="c-5"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var persons = new List&amp;lt;Person&amp;gt;
{
    new Person { Id = 1, Name = &amp;quot;John&amp;quot; },
    new Person { Id = 2, Name = &amp;quot;Jane&amp;quot; },
    new Person { Id = 3, Name = &amp;quot;Alice&amp;quot; }
};

var addresses = new List&amp;lt;Address&amp;gt;
{
    new Address { Id = 1, City = &amp;quot;New York&amp;quot; },
    new Address { Id = 2, City = &amp;quot;London&amp;quot; },
    new Address { Id = 3, City = &amp;quot;Paris&amp;quot; }
};

var joinedData = persons.Join(addresses,
                              person =&amp;gt; person.Id,
                              address =&amp;gt; address.Id,
                              (person, address) =&amp;gt; new { PersonName = person.Name, City = address.City });
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-5"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Person&amp;gt; persons = List.of(
        new Person(1, &amp;quot;John&amp;quot;),
        new Person(2, &amp;quot;Jane&amp;quot;),
        new Person(3, &amp;quot;Alice&amp;quot;)
);

List&amp;lt;Address&amp;gt; addresses = List.of(
        new Address(1, &amp;quot;New York&amp;quot;),
        new Address(2, &amp;quot;London&amp;quot;),
        new Address(3, &amp;quot;Paris&amp;quot;)
);

List&amp;lt;JoinedData&amp;gt; joinedData = persons.stream()
                                     .join(addresses.stream(),
                                           person -&amp;gt; person.getId(),
                                           address -&amp;gt; address.getId(),
                                           (person, address) -&amp;gt; new JoinedData(person.getName(), address.getCity()))
                                     .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-5"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[{ PersonName = &amp;quot;John&amp;quot;, City = &amp;quot;New York&amp;quot; },
 { PersonName = &amp;quot;Jane&amp;quot;, City = &amp;quot;London&amp;quot; },
 { PersonName = &amp;quot;Alice&amp;quot;, City = &amp;quot;Paris&amp;quot; }]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="any-anymatch"&gt;Any / AnyMatch&lt;/h2&gt;
&lt;p&gt;Checks if any element in the sequence satisfies a specified condition.&lt;/p&gt;
&lt;h3 id="c-6"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var anyEven = numbers.Any(n =&amp;gt; n % 2 == 0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-6"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
boolean anyEven = numbers.stream()
                         .anyMatch(n -&amp;gt; n % 2 == 0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-6"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="all-allmatch"&gt;All / AllMatch&lt;/h2&gt;
&lt;p&gt;Checks if all elements in the sequence satisfy a specified condition.&lt;/p&gt;
&lt;h3 id="c-7"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var allPositive = numbers.All(n =&amp;gt; n &amp;gt; 0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-7"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);

boolean allPositive = numbers.stream()
                             .allMatch(n -&amp;gt; n &amp;gt; 0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-7"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="contains-contains"&gt;Contains / contains&lt;/h2&gt;
&lt;p&gt;Checks if a sequence contains a specific element.&lt;/p&gt;
&lt;h3 id="c-8"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var fruits = new List&amp;lt;string&amp;gt; { &amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot; };
var containsBanana = fruits.Contains(&amp;quot;banana&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-8"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;String&amp;gt; fruits = Arrays.asList(&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;);
boolean containsBanana = fruits.contains(&amp;quot;banana&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-8"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="count-count"&gt;Count / count&lt;/h2&gt;
&lt;p&gt;Returns the number of elements in a sequence.&lt;/p&gt;
&lt;h3 id="c-9"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var count = numbers.Count();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-9"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
long count = numbers.stream()
                    .count();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-9"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="first-findfirst"&gt;First / findFirst&lt;/h2&gt;
&lt;p&gt;Returns the first element from a sequence, or throws an exception if the sequence is empty.&lt;/p&gt;
&lt;h3 id="c-10"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var firstNumber = numbers.First();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-10"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
int firstNumber = numbers.stream()
                         .findFirst()
                         .orElseThrow(NoSuchElementException::new);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-10"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="firstordefault-findfirst"&gt;FirstOrDefault / findFirst&lt;/h2&gt;
&lt;p&gt;Returns the first element from a sequence, or returns the default value for the element type if the sequence is empty.&lt;/p&gt;
&lt;h3 id="c-11"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt;();
var firstOrDefaultNumber = numbers.FirstOrDefault();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-11"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = new ArrayList&amp;lt;&amp;gt;();
int firstOrDefaultNumber = numbers.stream()
                                  .findFirst()
                                  .orElse(0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-11"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="last-reduce"&gt;Last / reduce&lt;/h2&gt;
&lt;p&gt;Returns the last element from a sequence, or throws an exception if the sequence is empty.&lt;/p&gt;
&lt;h3 id="c-12"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;List&amp;lt;int&amp;gt; numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };

int lastNumber = numbers.Last();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-12"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
int lastNumber = numbers.stream()
                .reduce((a, b) -&amp;gt; b)
                .orElseThrow(NoSuchElementException::new);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-12"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="lastordefault-reduce"&gt;LastOrDefault / reduce&lt;/h2&gt;
&lt;p&gt;Returns the last element from a sequence, or returns the default value for the element type if the sequence is empty.&lt;/p&gt;
&lt;h3 id="c-13"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var = new List&amp;lt;int&amp;gt;();
var lastOrDefaultNumber = numbers.LastOrDefault();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-13"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = new ArrayList&amp;lt;&amp;gt;();
int lastOrDefaultNumber = numbers.stream()
                                 .reduce((a, b) -&amp;gt; b)
                                 .orElse(0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-13"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="skip-skip"&gt;Skip / skip&lt;/h2&gt;
&lt;p&gt;Skips a specified number of elements from the start of a sequence.&lt;/p&gt;
&lt;h3 id="c-14"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var skippedNumbers = numbers.Skip(2);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-14"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
List&amp;lt;Integer&amp;gt; skippedNumbers = numbers.stream()
                                      .skip(2)
                                      .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-14"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="skipwhile-dropwhile"&gt;SkipWhile / dropWhile&lt;/h2&gt;
&lt;p&gt;Skips elements in a sequence until a specified condition is no longer satisfied, and includes all the remaining elements.&lt;/p&gt;
&lt;h3 id="c-15"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var skippedNumbers = numbers.SkipWhile(n =&amp;gt; n &amp;lt; 3);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-15"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
List&amp;lt;Integer&amp;gt; skippedNumbers = numbers.stream()
                                      .dropWhile(n -&amp;gt; n &amp;lt; 3)
                                      .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-15"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="take-limit"&gt;Take / limit&lt;/h2&gt;
&lt;p&gt;Returns a specified number of contiguous elements from the start of a sequence.&lt;/p&gt;
&lt;h3 id="c-16"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var takenNumbers = numbers.Take(3);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-16"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
List&amp;lt;Integer&amp;gt; takenNumbers = numbers.stream()
                                    .limit(3)
                                    .collect(Collectors.toList());

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-16"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="takewhile-takewhile"&gt;TakeWhile / takeWhile&lt;/h2&gt;
&lt;p&gt;takes elements from a sequence as long as a specified condition is true.&lt;/p&gt;
&lt;h3 id="c-17"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var takenNumbers = numbers.TakeWhile(n =&amp;gt; n &amp;lt; 4);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-17"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
List&amp;lt;Integer&amp;gt; takenNumbers = numbers.stream()
                                    .takeWhile(n -&amp;gt; n &amp;lt; 4)
                                    .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-17"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="sum-sum"&gt;Sum / Sum&lt;/h2&gt;
&lt;p&gt;Calculates the sum of a sequence of numeric values.&lt;/p&gt;
&lt;h3 id="c-18"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var sum = numbers.Sum();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-18"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;int&amp;gt; numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
int sum = numbers.Sum();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-18"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;15
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="average-average"&gt;Average / average&lt;/h2&gt;
&lt;p&gt;Calculates the average of a sequence of numeric values.&lt;/p&gt;
&lt;h3 id="c-19"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var average = numbers.Average();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-19"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
double average = numbers.stream()
                        .mapToInt(Integer::intValue)
                        .average()
                        .orElseThrow(NoSuchElementException::new);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-19"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="min-min"&gt;Min / min&lt;/h2&gt;
&lt;p&gt;Returns the minimum value from a sequence of comparable elements.&lt;/p&gt;
&lt;h3 id="c-20"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 5, 2, 9, 1, 7 };
var min = numbers.Min();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-20"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(5, 2, 9, 1, 7);
int min = numbers.stream()
                 .mapToInt(Integer::intValue)
                 .min()
                 .orElseThrow(NoSuchElementException::new);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-20"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="max-max"&gt;Max / max&lt;/h2&gt;
&lt;p&gt;Returns the maximum value from a sequence of comparable elements.&lt;/p&gt;
&lt;h3 id="c-21"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 5, 2, 9, 1, 7 };
var max = numbers.Max();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-21"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(5, 2, 9, 1, 7);
int max = numbers.stream()
                 .mapToInt(Integer::intValue)
                 .max()
                 .orElseThrow(NoSuchElementException::new);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-21"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;9
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="aggregate-reduce"&gt;Aggregate / reduce&lt;/h2&gt;
&lt;p&gt;Performs a custom aggregation operation on the elements of a sequence, combining them iteratively based on a specified lambda expression.&lt;/p&gt;
&lt;h3 id="c-22"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
var sum = numbers.Aggregate((acc, num) =&amp;gt; acc + num);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-22"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
int sum = numbers.stream()
                 .reduce(0, (acc, num) -&amp;gt; acc + num);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-22"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;15
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="distinct-distinct"&gt;Distinct / distinct&lt;/h2&gt;
&lt;p&gt;Returns a sequence with distinct elements.&lt;/p&gt;
&lt;h3 id="c-23"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 2, 3, 3, 4, 5 };
var distinctNumbers = numbers.Distinct();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-23"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 2, 3, 3, 4, 5);
List&amp;lt;Integer&amp;gt; distinctNumbers = numbers.stream()
                                       .distinct()
                                       .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-23"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="union-concat"&gt;Union / concat&lt;/h2&gt;
&lt;p&gt;Combines two sequences, returning a sequence that contains distinct elements from both sequences.&lt;/p&gt;
&lt;h3 id="c-24"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers1 = new List&amp;lt;int&amp;gt; { 1, 2, 3 };
var numbers2 = new List&amp;lt;int&amp;gt; { 3, 4, 5 };
var unionNumbers = numbers1.Union(numbers2);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-24"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers1 = Arrays.asList(1, 2, 3);
List&amp;lt;Integer&amp;gt; numbers2 = Arrays.asList(3, 4, 5);
List&amp;lt;Integer&amp;gt; unionNumbers = Stream.concat(numbers1.stream(), numbers2.stream())
                                   .distinct()
                                   .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-24"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="intersect-filter"&gt;Intersect / filter&lt;/h2&gt;
&lt;p&gt;Returns the common elements between two sequences.&lt;/p&gt;
&lt;h3 id="c-25"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers1 = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4 };
var numbers2 = new List&amp;lt;int&amp;gt; { 3, 4, 5 };
var intersectNumbers = numbers1.Intersect(numbers2);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-25"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers1 = Arrays.asList(1, 2, 3, 4);
List&amp;lt;Integer&amp;gt; numbers2 = Arrays.asList(3, 4, 5);
List&amp;lt;Integer&amp;gt; intersectNumbers = numbers1.stream()
                                         .filter(numbers2::contains)
                                         .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-25"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[3, 4]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="except-filter"&gt;Except / filter&lt;/h2&gt;
&lt;p&gt;Returns the elements from the first sequence that are not present in the second sequence.&lt;/p&gt;
&lt;h3 id="c-26"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers1 = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4 };
var numbers2 = new List&amp;lt;int&amp;gt; { 3, 4, 5 };
var exceptNumbers = numbers1.Except(numbers2);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-26"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers1 = Arrays.asList(1, 2, 3, 4);
List&amp;lt;Integer&amp;gt; numbers2 = Arrays.asList(3, 4, 5);
List&amp;lt;Integer&amp;gt; exceptNumbers = numbers1.stream()
                                      .filter(num -&amp;gt; !numbers2.contains(num))
                                      .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-26"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="concat-concat"&gt;Concat / concat&lt;/h2&gt;
&lt;p&gt;Concatenates two sequences into a single sequence.&lt;/p&gt;
&lt;h3 id="c-27"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers1 = new List&amp;lt;int&amp;gt; { 1, 2, 3 };
var numbers2 = new List&amp;lt;int&amp;gt; { 3, 4, 5 };
var concatenatedNumbers = numbers1.Concat(numbers2).ToList();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-27"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers1 = Arrays.asList(1, 2, 3);
List&amp;lt;Integer&amp;gt; numbers2 = Arrays.asList(3, 4, 5);
List&amp;lt;Integer&amp;gt; concatenatedNumbers = Stream.concat(numbers1.stream(), numbers2.stream())
                                          .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-27"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="reverse-reverse"&gt;Reverse / reverse&lt;/h2&gt;
&lt;p&gt;Reverses the order of the elements in a sequence.&lt;/p&gt;
&lt;h3 id="c-28"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4, 5 };
numbers.Reverse();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-28"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3, 4, 5);
Collections.reverse(numbers);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-28"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="zip-maptoobj"&gt;Zip / mapToObj&lt;/h2&gt;
&lt;p&gt;Combines two sequences by merging corresponding elements into a new sequence of tuples.&lt;/p&gt;
&lt;h3 id="c-29"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers1 = new List&amp;lt;int&amp;gt; { 1, 2, 3, 4 };
var numbers2 = new List&amp;lt;int&amp;gt; { 10, 20, 30 };

var zippedNumbers = numbers1.Zip(numbers2, (x, y) =&amp;gt; x + y).ToList();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-29"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers1 = Arrays.asList(1, 2, 3, 4);
List&amp;lt;Integer&amp;gt; numbers2 = Arrays.asList(10, 20, 30);
List&amp;lt;Integer&amp;gt; zippedNumbers = IntStream.range(0, Math.min(numbers1.size(), numbers2.size()))
                                       .mapToObj(i -&amp;gt; numbers1.get(i) + numbers2.get(i))
                                       .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-29"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[11, 22, 33]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="elementat-get"&gt;ElementAt / get&lt;/h2&gt;
&lt;p&gt;Returns the element at a specified index in a sequence.&lt;/p&gt;
&lt;h3 id="c-30"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var fruits = new List&amp;lt;string&amp;gt; { &amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot; };
var element = fruits.ElementAt(1);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-30"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;String&amp;gt; fruits = Arrays.asList(&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;);
String element = fruits.get(1);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-30"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;banana
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="single-reduce"&gt;Single / reduce&lt;/h2&gt;
&lt;p&gt;Returns a single element from a sequence and throws an exception if the sequence contains zero or more than one element.&lt;/p&gt;
&lt;h3 id="c-31"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1 };
var singleNumber = numbers.Single();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-31"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1);
int singleNumber = numbers.stream()
                          .reduce((a, b) -&amp;gt; {
                              throw new IllegalStateException(&amp;quot;More than one element found&amp;quot;);
                          })
                          .orElseThrow(NoSuchElementException::new);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-31"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="singleordefault-reduce"&gt;SingleOrDefault / reduce&lt;/h2&gt;
&lt;p&gt;Returns the single element of a sequence, or the default value if the sequence is empty or contains more than one element.&lt;/p&gt;
&lt;h3 id="c-32"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3 };
var singleOrDefaultNumber = numbers.SingleOrDefault();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-32"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3);
int singleOrDefaultNumber = numbers.stream()
                                   .reduce((a, b) -&amp;gt; { 
                                        throw new IllegalStateException(&amp;quot;More than one element found&amp;quot;);
                                   })
                                   .orElse(0);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-32"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="defaultifempty"&gt;DefaultIfEmpty&lt;/h2&gt;
&lt;p&gt;Returns a sequence with a default element if the original sequence is empty.&lt;/p&gt;
&lt;h3 id="c-33"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt;();
var numbersWithDefault = numbers.DefaultIfEmpty(5);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-33"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = new ArrayList&amp;lt;&amp;gt;();
Iterable&amp;lt;Integer&amp;gt; numbersWithDefault = numbers.isEmpty() 
                                        ? Collections.singletonList(5) 
                                        : numbers;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-33"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[5]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="sequenceequal-sequenceequal"&gt;SequenceEqual / sequenceEqual&lt;/h2&gt;
&lt;p&gt;Checks if two sequences are equal by comparing their elements.&lt;/p&gt;
&lt;h3 id="c-34"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers1 = new List&amp;lt;int&amp;gt; { 1, 2, 3 };
var numbers2 = new List&amp;lt;int&amp;gt; { 1, 2, 3 };
var isEqual = numbers1.SequenceEqual(numbers2);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-34"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers1 = Arrays.asList(1, 2, 3);
List&amp;lt;Integer&amp;gt; numbers2 = Arrays.asList(1, 2, 3);
boolean isEqual = Objects.equals(numbers1, numbers2);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-34"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;true
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="cast-map-with-explicit-casting"&gt;Cast / map (with explicit casting)&lt;/h2&gt;
&lt;p&gt;Converts the elements of a sequence to a specified type or throws an exception if any element in the sequence cannot be cast to that type.&lt;/p&gt;
&lt;h3 id="c-35"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;object[] objects = { 1, 2, 3 };
IEnumerable&amp;lt;int&amp;gt; numbers = objects.Cast&amp;lt;int&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-35"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;Object[] objects = { 1, 2, 3 };
List&amp;lt;Integer&amp;gt; numbers = Arrays.stream(objects)
                              .map(obj -&amp;gt; (Integer) obj)
                              .collect(Collectors.toList());

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-35"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[1, 2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="oftype-filter-with-type-check"&gt;OfType / filter (with type check)&lt;/h2&gt;
&lt;p&gt;Filters the elements of a sequence based on a specified type.&lt;/p&gt;
&lt;h3 id="c-36"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var mixedList = new ArrayList { 1, &amp;quot;hello&amp;quot;, 3.14, true };
IEnumerable&amp;lt;string&amp;gt; strings = mixedList.OfType&amp;lt;string&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-36"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Object&amp;gt; mixedList = Arrays.asList(1, &amp;quot;hello&amp;quot;, 3.14, true);
List&amp;lt;String&amp;gt; strings = mixedList.stream()
                                .filter(obj -&amp;gt; obj instanceof String)
                                .map(obj -&amp;gt; (String) obj)
                                .collect(Collectors.toList());
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-36"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[&amp;quot;hello&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="toarray-toarray"&gt;ToArray / toArray&lt;/h2&gt;
&lt;p&gt;Converts a sequence to an array.&lt;/p&gt;
&lt;h3 id="c-37"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var numbers = new List&amp;lt;int&amp;gt; { 1, 2, 3 };
int[] numberArray = numbers.ToArray();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-37"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;Integer&amp;gt; numbers = Arrays.asList(1, 2, 3);
int[] numberArray = numbers.stream()
                           .mapToInt(Integer::intValue)
                           .toArray();
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="tolist-aslist"&gt;ToList / asList&lt;/h2&gt;
&lt;p&gt;Converts a sequence to a list.&lt;/p&gt;
&lt;h3 id="c-38"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;int[] numbers = { 1, 2, 3 };
var numberList = numbers.ToList();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-38"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;int[] numbers = { 1, 2, 3 };
List&amp;lt;Integer&amp;gt; numberList = new ArrayList&amp;lt;&amp;gt;(Arrays.asList(numbers));
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="todictionary-tomap"&gt;ToDictionary / toMap&lt;/h2&gt;
&lt;p&gt;Converts a sequence to a dictionary based on a specified key and value selector.&lt;/p&gt;
&lt;h3 id="c-39"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var fruits = new List&amp;lt;string&amp;gt; { &amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot; };
Dictionary&amp;lt;string, int&amp;gt; fruitLengths = fruits.ToDictionary(fruit =&amp;gt; fruit, fruit =&amp;gt; fruit.Length);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-39"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;String&amp;gt; fruits = Arrays.asList(&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;);
Map&amp;lt;String, Integer&amp;gt; fruitMap = fruits.stream()
                                      .collect(Collectors.toMap(fruit -&amp;gt; fruit, fruit -&amp;gt; fruit.length()));
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-37"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
    apple: 5,
    banana: 6,
    cherry: 6
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="tolookup-groupingby"&gt;ToLookup / groupingBy&lt;/h2&gt;
&lt;p&gt;Converts a sequence to a lookup based on a specified key selector.&lt;/p&gt;
&lt;h3 id="c-40"&gt;C#&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;var fruits = new List&amp;lt;string&amp;gt; { &amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;, &amp;quot;avocado&amp;quot;, &amp;quot;blueberry&amp;quot; };
ILookup&amp;lt;char, string&amp;gt; fruitsByFirstLetter = fruits.ToLookup(fruit =&amp;gt; fruit[0]);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="java-40"&gt;Java&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;List&amp;lt;String&amp;gt; fruits = Arrays.asList(&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;, &amp;quot;avocado&amp;quot;, &amp;quot;blueberry&amp;quot;);
Map&amp;lt;Character, List&amp;lt;String&amp;gt;&amp;gt; fruitsByFirstLetter = fruits.stream()
                                                        .collect(Collectors.groupingBy(fruit -&amp;gt; fruit.charAt(0)));
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="output-38"&gt;Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;{
    a = [apple, avocado],
    b = [banana, blueberry],
    c = [cherry]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;By grasping the mapping of C# LINQ functions to their Java equivalents, we can confidently navigate the transition between these languages.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Feature Flags: Removing Unused Methods on Cleanup</title>
      <link>https://www.ankursheel.com/blog/feature-flag-cleanup-featureflagwillmakethisobsolete-annotation</link>
      <description>Keep your codebase clean and organized with the FeatureFlagWillMakeThisObsolete annotation. Mark unused methods that can be safely deleted on feature flag cleanup a breeze. Say goodbye to clunky workarounds and technical debt</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/feature-flag-cleanup-featureflagwillmakethisobsolete-annotation/cover.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/feature-flag-cleanup-featureflagwillmakethisobsolete-annotation</guid>
      <pubDate>Fri, 14 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;As part of introducing code behind Feature Flags, we sometimes refactor the old code into methods so that it's easier to consume. So far, so good.&lt;/p&gt;
&lt;p&gt;However, when cleaning up the flag, there is a possibility of forgetting to delete this now-unused method (s). For me, it happens a lot more than I would like to admit. This results in unused code just lying around adding to the cruft.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; We might also want to delete whole classes or just a field on cleanup, but for brevity, I am using "methods" in the article.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/feature-flag-cleanup-featureflagwillmakethisobsolete-annotation/cover.png" alt="obscure code with a X"&gt;&lt;/p&gt;
&lt;h2 id="clunky-workarounds"&gt;Clunky Workarounds&lt;/h2&gt;
&lt;h3 id="clunky-workaround-1"&gt;Clunky Workaround #1&lt;/h3&gt;
&lt;p&gt;We can use tools to automatically check for unused code in our code base and complain if any instances are found.&lt;/p&gt;
&lt;p&gt;In my experience, such tools are slightly clunky in scenarios where nested methods must be removed. We need to manually check and delete other methods calling the original function or run multiple passes to make the check green.&lt;/p&gt;
&lt;p&gt;It can also create friction if people are used to writing the methods first and then wiring them up later.&lt;/p&gt;
&lt;h3 id="clunky-workaround-2"&gt;Clunky Workaround #2&lt;/h3&gt;
&lt;p&gt;A potential step up is adding a comment inside the methods telling us to delete it when the flag is removed. But what if we don't search with the feature key at the time of cleanup or have a typo in the feature key inside the comment?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What if we could make the compiler complain if we forgot to delete the unused method?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="introducing-the-featureflagwillmakethisobsolete-annotation"&gt;Introducing the FeatureFlagWillMakeThisObsolete Annotation&lt;/h2&gt;
&lt;p&gt;We can create a new annotation, &lt;code&gt;FeatureFlagWillMakeThisObsolete&lt;/code&gt;, that makes the compiler complain if an unused method is not deleted. This annotation can be added to the code using a string argument corresponding to the feature flag name.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;@Retention(RetentionPolicy.SOURCE)  
public @interface FeatureFlagWillMakeThisObsolete {
    String value();  
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since we don't need the annotation at runtime, we can add the retention policy as Source. We also want to be able to annotate anything so we do not add the &lt;code&gt;@Target&lt;/code&gt; meta-annotation.&lt;/p&gt;
&lt;p&gt;Since we still have to pass in a constant string, you might think this is no better than the comment workaround above, and you would be correct.&lt;/p&gt;
&lt;p&gt;But if we refactor the flag name into a static final field, you can pass it into the annotation.&lt;/p&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-java"&gt;static final String MyFeatureFlagKey = "feature.key";`

@FeatureFlagWillMakeThisObsolete(MyFeatureFlagKey)
void deleteMe()
{
    // old code
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, at cleanup time, all we have to do is remove &lt;code&gt;MyFeatureFlagKey&lt;/code&gt;, and the compiler will complain until we remove all instances where it was being used.&lt;/p&gt;
&lt;h2 id="advantages-of-the-featureflagwillmakethisobsolete-annotation"&gt;Advantages of the FeatureFlagWillMakeThisObsolete Annotation&lt;/h2&gt;
&lt;p&gt;The most significant advantage of this approach is that you can mark even the nested functions that should be deleted on cleanup. No looking in the IDE to find the unused functions one by one.&lt;/p&gt;
&lt;p&gt;It centralizes where the raw string for the feature flag name is defined in the code base.&lt;/p&gt;
&lt;p&gt;We also don't have to stop and look at the code at the cleanup time to decide whether it can be deleted or not. We had already made that decision when we were writing the code. It allows us (and the reviewer) to optimize for simple cleanup reviews.&lt;/p&gt;
&lt;p&gt;We could also create custom plugins for our IDE(like IntelliJ) to automatically nuke the annotated methods.&lt;/p&gt;
&lt;h2 id="caveats"&gt;Caveats&lt;/h2&gt;
&lt;p&gt;It's not all a bed of roses, though. There are some things to keep in mind while using this annotation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The developer must remember to add the annotation when writing the code.&lt;/li&gt;
&lt;li&gt;Other developers need to treat this annotation similarly to &lt;code&gt;@Deprecated&lt;/code&gt;. This requires education or making the developers add the &lt;code&gt;@Deprecated&lt;/code&gt; annotation along with this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In conclusion, the &lt;code&gt;FeatureFlagWillMakeThisObsolete&lt;/code&gt; annotation provides a practical solution for ensuring cleaner Feature Flags cleanup by marking unused methods that can be safely deleted.&lt;/p&gt;
&lt;p&gt;This annotation has several advantages over the existing workarounds, including the ability to mark even nested functions and optimize for simple cleanups.&lt;/p&gt;
&lt;p&gt;While it is important to remember to add the annotation when writing the code and ensure that other developers treat it similarly to &lt;code&gt;@Deprecated&lt;/code&gt;, by implementing the &lt;code&gt;FeatureFlagWillMakeThisObsolete&lt;/code&gt; annotation in our codebase, we can improve code quality, reduce technical debt, and make Feature Flag cleanup a breeze.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Laid off: Reflections and Lessons learned</title>
      <link>https://www.ankursheel.com/blog/laid-off-reflections-lessons-learned</link>
      <description>Talking about layoffs is essential to support those going through it. Reflections and Lessons learned after getting laid off again</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/laid-off-reflections-lessons-learned/cover.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/laid-off-reflections-lessons-learned</guid>
      <pubDate>Thu, 30 Mar 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;&lt;em&gt;When I wrote this, I didn't think I would ever publish any part of it. It was a way to process my feelings after getting laid off. But, there are a few factors which changed my mind. I was inspired to clean it up and post it after reading &lt;a href="https://angelariggs.github.io/articles/thirty-five-days"&gt;The Future of Quality at Instrument was 35 Days Long&lt;/a&gt;. Enough time has passed that I am comfortable publishing this, even though there might still be repercussions. And lastly, some more of my friends have been laid off and after chatting with them I thought this could be helpful to others.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer: The facts are from my point of view and and the interpretation is educated guesses.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, getting laid off can feel like a personal badge of failure. You might see an open-to-work badge on LinkedIn or hear about the new job someone is starting, but no one talks about their feelings after getting laid off.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/laid-off-reflections-lessons-learned/cover.png" alt="A cartoon of a sad person with a cardboard box"&gt;&lt;/p&gt;
&lt;p&gt;Having gone through layoffs multiple times, I can say it's been traumatic every time. Especially if I felt I was performing satisfactorily. Every time I felt like I was the only one struggling when I should be able to move on like the others. And to be honest, that's the face I showed in public every time.&lt;/p&gt;
&lt;p&gt;Given the current climate, I would like this post to make people feel less alone after getting laid off.&lt;/p&gt;
&lt;h2 id="what-would-i-change-about-my-layoff-experience"&gt;What would I change about my layoff experience&lt;/h2&gt;
&lt;p&gt;There is no good time to be laid-off. But getting laid off just before mid-year reviews was not ideal. I was also about a month away from my anniversary and vesting another 25% of my ESOPs.&lt;/p&gt;
&lt;p&gt;I was surprised that the company continued hiring till before the layoffs and did not explore an across-the-board reduction in pay or voluntary (temporary) quitting, like the last time they were in a similar situation.&lt;/p&gt;
&lt;p&gt;I wish, in this regard, they had been more like Apple (who, at the time of publishing) have not resorted to layoffs because &lt;a href="https://blog.pragmaticengineer.com/apple-job-cuts-tide/"&gt;they did not overhire&lt;/a&gt;. Moreover, &lt;a href="https://www.bbc.com/news/business-64258289"&gt;CEO Tim Cook took a pay cut of 40%&lt;/a&gt; to help weather the economic climate.&lt;/p&gt;
&lt;h3 id="relationships-with-co-workers"&gt;Relationships with co-workers&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;While you don't have to be everything to everyone in your network, it's human decency 101 to reach out to those you spent 40 hours a week with&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;Scarlett McCarthy&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;This one hurt the most.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is ironic that when you quit of your own accord, you get a going away present, a card filled with thoughts on how you will be missed and maybe a speech or two extolling your value. You get an exit interview and a place to share your thoughts. Your wins are celebrated.&lt;/p&gt;
&lt;p&gt;But in the case of layoffs, all of that vanishes, and you feel like a social pariah.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just because it's uncomfortable to have doesn't mean you should avoid it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some colleagues I thought would reach out didn't. On the flip side, some people I didn't expect reached out. I want to believe that people did not reach out not because the relationship did not matter but because it makes for an awkward conversation.&lt;/p&gt;
&lt;p&gt;I wish some more of my colleagues had asked how I was doing and if I wanted to catch up. Even some messages that made me feel I had a beneficial impact on them would have been appreciated. Anything I could take with me for the future would have made the experience less painful.&lt;/p&gt;
&lt;p&gt;If you are on the other side and know someone who has been laid off, don't be a stranger. Drop them an email or a slack message asking if they want to get together for a coffee. Even if they ignore you or say no, that's fine. Everyone deals with getting laid-off differently. The important thing is that they will remember that you reached out to them.&lt;/p&gt;
&lt;h3 id="thoughts-about-the-reason-for-laying-me-off"&gt;Thoughts about the reason for laying me off&lt;/h3&gt;
&lt;p&gt;That I was on the hit list at this company was both surprising and not surprising. I was one of the 1st engineers to join the company which in theory should have protected me. But, there were subtle and not-so-subtle hints that some people wanted me to leave. Probably because of that very reason.&lt;/p&gt;
&lt;p&gt;The official reason for disestablishing my role was that the company had too many backend engineers. I was "too senior" (whatever that means) and hence expensive to keep on. By letting me go, they could save more jobs.&lt;/p&gt;
&lt;p&gt;Although this might be true, it doesn't make sense to me for various reasons. The most important being that more senior people as well as people on the same level as me but with a different role were not put in the firing line.&lt;/p&gt;
&lt;p&gt;If the company wanted to keep me on, they would have asked me to work in an area where they needed more engineers or explored the possibility of working reduced hours/pay. I have on multiple occasions shown that I can pick up new technologies relatively fast, so it would have been low risk.&lt;/p&gt;
&lt;p&gt;I had written a lot of the backend code as well as some utilities for developer productivity. Infact, as far as the github vanity metrics go, I was far ahead of everyone.&lt;/p&gt;
&lt;p&gt;I also had a lot of historical context about some engineering decisions in the Product and Engineering team&lt;/p&gt;
&lt;p&gt;given all this, I could have easily continued to provide value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It was the easiest way to silence what I think they saw as disruptive dissent&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Like other startups I have been a part of, I joined this one early in the company's life before the founders built the leadership team. From the beginning, I openly raised things I disagreed with or thought could be better.&lt;/p&gt;
&lt;p&gt;I feel that as new people joined the company, they became increasingly uncomfortable with my standing up for my principles. My discussions in internal forums clearly threatened leadership, as they probably felt called out.&lt;/p&gt;
&lt;p&gt;I don't blame them for not wanting to deal with the questions I was raising. It's possible that disagreeing with mandatory in-office days, &lt;a href="https://www.ankursheel.com/team-name"&gt;change in team names&lt;/a&gt; and advocating for pay transparency/equity etc. is what helped put the final nails in the coffin.&lt;/p&gt;
&lt;p&gt;Since I am not in a country with at-will employment and there was no issue with my performance, I feel that with the decision to announce layoffs, my detractors found an easy way to force me to leave.&lt;/p&gt;
&lt;h2 id="speaking-up-is-risky-so-why-do-it"&gt;Speaking up is risky, so why do it?&lt;/h2&gt;
&lt;p&gt;It's not the first time, and it won't be the last when people are fired/laid off as a silencing tactic. Look at &lt;a href="https://ma.nu/blog/bye-twitter"&gt;what happened at Twitter after the takeover&lt;/a&gt; by Elon Musk.&lt;/p&gt;
&lt;p&gt;But, you should still speak up.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;There are consequences for speaking out. There are consequences for doing the right thing. &lt;br&gt;&lt;br&gt;But we do the right thing because it is the right thing to do. &lt;a href="https://twitter.com/hashtag/AppleToo?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#AppleToo&lt;/a&gt; is about asking Apple to do better, to end systemic discrimination, abuse, and pay inequity. &lt;br&gt;&lt;br&gt;Do the right thing. &lt;a href="https://t.co/nhxFlflSvR"&gt;https://t.co/nhxFlflSvR&lt;/a&gt;&lt;/p&gt;— Janneke Parrish (@JannekeParrish) &lt;a href="https://twitter.com/JannekeParrish/status/1449066853314224129?ref_src=twsrc%5Etfw"&gt;October 15, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;
&lt;p&gt;It's also good for business.&lt;/p&gt;
&lt;div style="position: relative;width: 100%;padding-bottom: 56.25%;margin: 1rem 0;"&gt;
  &lt;iframe src="https://www.youtube.com/embed/dGfcc4Np_Sc" title="Why your business needs dissenters" style="position: absolute;width: 100%;height: 100%;left: 0;top: 0;right: 0;" allowfullscreen=""&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id="it-worked-out-in-the-end"&gt;It worked out in the end&lt;/h2&gt;
&lt;p&gt;Everything worked out for me in the end.&lt;/p&gt;
&lt;p&gt;After I raised my concerns with the founders, they agreed to vest 25% of my options. I got a month of severance. I also had many annual leaves left over, which got paid out.&lt;/p&gt;
&lt;p&gt;I took a few days to process my feelings before starting the job hunt. Luckily, I landed a job almost immediately once I started looking. Nevertheless, I took a month to unwind before starting the new position.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Previously, the time for getting a new job has varied from 1 to 6 months, so this was a pleasant surprise.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nearly all the companies I had worked with previously contacted me to see if I wanted to return. This was a great signal that I was doing something right when I was there. I had also been &lt;a href="https://www.ankursheel.com/interview-happy-job"&gt;interviewing when I didn't need a job&lt;/a&gt;, so I could reinitiate talks with some of those companies.&lt;/p&gt;
&lt;p&gt;It further shaped my perspective and has informed the &lt;a href="https://www.ankursheel.com/interview-interviewers-must-have-deal-breaker-list"&gt;questions I'm asking companies during the interview process&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="some-unsolicited-advice"&gt;Some unsolicited advice&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Have a layoff fund, so you have some runway and can ensure the next job is not just a rebound.&lt;/li&gt;
&lt;li&gt;Every couple of months, update your resume so you are not scrambling to remember what you did in case of an unplanned exit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ankursheel.com/blog/interview-happy-job"&gt;Keep interviewing even if you are happy in your job&lt;/a&gt; and keep a list of interesting companies. Ask and connect with the interviewers (you resonated with) on LinkedIn.&lt;/li&gt;
&lt;li&gt;Take some me-time. Give yourself time to process your feelings. This is one of the few times in your life when you get to be alone with your thoughts and can truly unwind. Every time I was laid off, it was a coincidence that I was about to go on a holiday. This enabled me to take a step back and recharge before taking a new job.&lt;/li&gt;
&lt;li&gt;A job search is a numbers game, so keep applying and don't take the rejection personally. Most importantly, don't stop applying till you sign an offer letter.&lt;/li&gt;
&lt;li&gt;The company might employ pressure tactics to get you to leave but do not yield. Either negotiate a severance or talk to a lawyer, so that you dont get a horrible deal.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Advice for anyone hit by redundancies in Germany.&lt;br&gt;&lt;br&gt;I cannot emphasise enough what a big mistake it is in signing without reviewing the offer with an employment lawyer (your insurance might even cover the cost; but IMO an important investment even if not). &lt;a href="https://t.co/xYxEIViSCN"&gt;https://t.co/xYxEIViSCN&lt;/a&gt;&lt;/p&gt;— Gergely Orosz (@GergelyOrosz) &lt;a href="https://twitter.com/GergelyOrosz/status/1620048899355594752?ref_src=twsrc%5Etfw"&gt;January 30, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Finally, remember that you are more than your job title and organisation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="final-thoughts"&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;I know the risks of speaking up. I am aware that I am privileged to be able to speak up more than others and that its not possible for everyone.&lt;/p&gt;
&lt;p&gt;At all companies I have worked at, I have always chosen to stand up and speak out when I have felt the need to. In most cases, it has worked out well and the company has acted on the feedback. In some others, not so much.&lt;/p&gt;
&lt;p&gt;Regardless of how it went for me, people have repeatedly told me they appreciated having someone ask questions and say what they were thinking but didn't feel safe saying.&lt;/p&gt;
&lt;p&gt;If you were recently laid off, please drop me a note. I might not be able to help, but I know how valuable it is to vent, and I'm happy to lend an ear.&lt;/p&gt;
&lt;p&gt;To end, I am going to leave you with these 2 songs to inspire you to start speaking up. :)&lt;/p&gt;
&lt;div style="position: relative;width: 100%;padding-bottom: 56.25%;margin: 1rem 0;"&gt;
  &lt;iframe src="https://www.youtube.com/embed/QUQsqBqxoR4" title="Brave" style="position: absolute;width: 100%;height: 100%;left: 0;top: 0;right: 0;" allowfullscreen=""&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div style="position: relative;width: 100%;padding-bottom: 56.25%;margin: 1rem 0;"&gt;
  &lt;iframe src="https://www.youtube.com/embed/CevxZvSJLk8" title="Roar" style="position: absolute;width: 100%;height: 100%;left: 0;top: 0;right: 0;" allowfullscreen=""&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Something else you want to know? Ask in the comments.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>How To Disable Buttons In Unity</title>
      <link>https://www.ankursheel.com/blog/disable-buttons-unity</link>
      <description>Unity offers three different ways to disable a UI Button, each of which can be used depending on the desired outcome.</description>
      <guid>https://www.ankursheel.com/blog/disable-buttons-unity</guid>
      <pubDate>Mon, 06 Feb 2023 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;When working with Unity UI, there will be times when you will need to disable a button. Unity provides three ways to disable a UI Button, each of which can be used depending on the desired user experience.&lt;/p&gt;
&lt;h2 id="using-enabled-property"&gt;Using enabled property&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;enabled&lt;/code&gt; property will make the button non-clickable, but it will not use the disabled colour.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;testButton.enabled = false;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will rarely want to use &lt;code&gt;enabled&lt;/code&gt; as it results in a confusing user experience.&lt;/p&gt;
&lt;h2 id="using-interactable-property"&gt;Using interactable property&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;interactable&lt;/code&gt; property will make the button non-clickable and will set the disabled colour (which is grey by default).&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;testButton.interactable = false;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In most cases, this is the option to use.&lt;/p&gt;
&lt;h2 id="using-gameobject.setactive"&gt;Using GameObject.SetActive&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gameObject.SetActive&lt;/code&gt; will deactivate the button and hide it from the user.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;testButton.gameObject.SetActive(false);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is an excellent option if you want to change what button is showing based on some conditions.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Using these methods, you can customize how the user will interact with the UI Button. It is crucial to understand how each of these methods works so that you can choose the best one for your project.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>How to echo commands as they are executed in a shell script</title>
      <link>https://www.ankursheel.com/blog/echo-commands-they-are-executed-shell-script</link>
      <description>It is helpful to log the shell commands being executed when running a bash script (especially when debugging it). Let see what commands we can use to log the commands</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/echo-commands-they-are-executed-shell-script/cover.jpg" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/echo-commands-they-are-executed-shell-script</guid>
      <pubDate>Sat, 10 Dec 2022 00:00:00 GMT</pubDate>
      <content:encoded>&lt;!-- https://unsplash.com/s/photos/ubuntu --&gt;
&lt;p&gt;It is helpful to log the shell commands being executed when running a bash script (especially when debugging it).&lt;/p&gt;
&lt;p&gt;As an example, we will use this bash file.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;#!/bin/bash  
  
Name=&amp;quot;Ankur&amp;quot;  
  
echo $Name  
ls | wc -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When we execute this script, we can see this as the output.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Ankur
10
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="solution-1"&gt;Solution 1&lt;/h2&gt;
&lt;p&gt;You can use &lt;code&gt;set -v&lt;/code&gt; in the shell script.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;#!/bin/bash  
set -v

Name=&amp;quot;Ankur&amp;quot;  
  
echo $Name  
ls | wc -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On running this script, we can see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Name=&amp;quot;Ankur&amp;quot;  

echo $Name
Ankur
ls | wc -l
10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note: You can turn off this behaviour by using &lt;code&gt;set +v&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can see that although it showed the command being executed, it did not expand the variable in the echo command.&lt;/p&gt;
&lt;h2 id="solution-2"&gt;Solution 2&lt;/h2&gt;
&lt;p&gt;You can use &lt;code&gt;set -x&lt;/code&gt; in a shell script.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;#!/bin/bash  
set -x

Name=&amp;quot;Ankur&amp;quot;  
  
echo $Name  
ls | wc -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On running this script, we can see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+ Name=Ankur
+ echo Ankur
Ankur
+ ls
+ wc -l
10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note: To turn off this behaviour, you can use &lt;code&gt;set +x&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;It showed the executed command and added a &lt;code&gt;+&lt;/code&gt; sign before the command. It also expanded the variable name.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We looked at 2 ways of showing the commands being executed in a shell script. These can be extremely helpful when debugging your shell script.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>How to add an image as a camera background in Unity</title>
      <link>https://www.ankursheel.com/blog/add-image-camera-background-unity</link>
      <description>The camera in Unity allows the setting of the background as a solid colour but not as an image. Let's look at how we can set it up to render a background image instead of a plain colour.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/add-image-camera-background-unity/after.png" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/add-image-camera-background-unity</guid>
      <pubDate>Sat, 19 Nov 2022 00:00:00 GMT</pubDate>
      <content:encoded>&lt;p&gt;The camera in Unity allows the setting of the background as a solid colour but not as an image. The camera is currently rendering the image below.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/add-image-camera-background-unity/before.png" alt="Camera rendering a solid colour"&gt;&lt;/p&gt;
&lt;p&gt;Let's look at how we can set it up to render a background image instead of a plain colour.&lt;/p&gt;
&lt;h2 id="adding-a-canvas"&gt;Adding a Canvas&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Start by creating a new canvas.&lt;/li&gt;
&lt;li&gt;Update the properties
&lt;ol&gt;
&lt;li&gt;Update &lt;strong&gt;Render Mode&lt;/strong&gt; to &lt;code&gt;Screen Space - Camera&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Screen Space - Overlay&lt;/code&gt; should be used only for the foreground UI. It renders the canvas on top of everything else, including the camera view.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Screen Space - Camera&lt;/code&gt; will render the canvas on a plane object in front of the camera. It will also automatically rescale to fit the view.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Set the &lt;strong&gt;Render Camera&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Drag and drop the camera from the scene.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update &lt;strong&gt;Plane Distance&lt;/strong&gt; (if needed):
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Plane Distance&lt;/strong&gt; is used to set the z-position for the canvas. You can increase it if some scene objects are hidden behind it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Remove/Disable the &lt;strong&gt;Graphics Raycaster&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Disabling the &lt;strong&gt;Graphics Raycaster&lt;/strong&gt; makes the canvas non-interactive, i.e. it will not capture clicks etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/add-image-camera-background-unity/canvas-settings.png" alt="Canvas Settings"&gt;&lt;/p&gt;
&lt;h2 id="add-the-background-image"&gt;Add the background image&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create an &lt;strong&gt;Image&lt;/strong&gt; inside of the canvas.&lt;/li&gt;
&lt;li&gt;Set the &lt;strong&gt;Source Image&lt;/strong&gt; to the background sprite.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/add-image-camera-background-unity/image-settings.png" alt="Setting the background sprite"&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Stretch your image to fill the (canvas) container.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/add-image-camera-background-unity/stretch-settings.png" alt="Rect Transform settings.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can do this by clicking the grey square in the &lt;strong&gt;Rect Transform&lt;/strong&gt;. In the window that opens, hold down &lt;strong&gt;Alt&lt;/strong&gt; and click the most &lt;strong&gt;bottom-right&lt;/strong&gt; square.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Now the image will show as the background.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/add-image-camera-background-unity/after.png" alt="Camera with background image"&gt;&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Finding the best credit card in New Zealand</title>
      <link>https://www.ankursheel.com/blog/best-credit-card-new-zealand</link>
      <description>This article compares a few credit cards offered in New Zealand. It looks at how much you need to spend in a year to maximize the value of each card</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/best-credit-card-new-zealand/cover.jpg" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/best-credit-card-new-zealand</guid>
      <pubDate>Sun, 06 Nov 2022 00:00:00 GMT</pubDate>
      <content:encoded>&lt;!-- https://unsplash.com/photos/RJQE64NmC_o --&gt;
&lt;p&gt;Credit cards are a tool. If you can pay your cards off in full every month, they can help you build wealth. If not, they can trap you in a cycle of debt that's very difficult to break.&lt;/p&gt;
&lt;p&gt;However, with so many credit card options, finding the one that maximizes the value based on your spending can take time and effort. Each credit card comes with its own benefits and features, so it can feel like you're comparing apples to oranges.&lt;/p&gt;
&lt;h2 id="comparison"&gt;Comparison&lt;/h2&gt;
&lt;p&gt;In this post, I compare the value of some of the cards offered by ANZ and American Express in New Zealand.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Credit Card&lt;/th&gt;
&lt;th&gt;Annual fee (NZD)&lt;/th&gt;
&lt;th&gt;Rebate&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;American Express Airpoints&lt;/td&gt;
&lt;td&gt;$0&lt;/td&gt;
&lt;td&gt;1.00%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ANZ Cashback Visa&lt;/td&gt;
&lt;td&gt;$45&lt;/td&gt;
&lt;td&gt;0.67%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ANZ Airpoints Visa&lt;/td&gt;
&lt;td&gt;$65&lt;/td&gt;
&lt;td&gt;0.77%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ANZ Cashback Visa Platinum&lt;/td&gt;
&lt;td&gt;$85&lt;/td&gt;
&lt;td&gt;0.83%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ANZ Airpoints Visa Platinum&lt;/td&gt;
&lt;td&gt;$150&lt;/td&gt;
&lt;td&gt;1.18%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;American Express Airpoints Platinum&lt;/td&gt;
&lt;td&gt;$195&lt;/td&gt;
&lt;td&gt;1.69%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;American Express Gold Card&lt;/td&gt;
&lt;td&gt;$200&lt;/td&gt;
&lt;td&gt;0.75%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;American Express Platinum Card&lt;/td&gt;
&lt;td&gt;$1250&lt;/td&gt;
&lt;td&gt;1.33%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id="american-express-airpoints"&gt;American Express Airpoints&lt;/h3&gt;
&lt;p&gt;Since there is no &lt;em&gt;Annual fee&lt;/em&gt;, you don't need to spend a minimum amount in a year.&lt;/p&gt;
&lt;p&gt;You will get back 1 cent for every additional dollar you spend.&lt;/p&gt;
&lt;h3 id="anz-cashback-visa"&gt;ANZ Cashback Visa&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 6,750 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 0.67 cents for every additional dollar you spend.&lt;/p&gt;
&lt;h3 id="anz-airpoints-visa"&gt;ANZ Airpoints Visa&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 8,450 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 0.77 cents for every additional dollar you spend.&lt;/p&gt;
&lt;h3 id="anz-cashback-visa-platinum"&gt;ANZ Cashback Visa Platinum&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 10,200 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 0.83 cents for every additional dollar you spend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The cashback visa is a better option unless you spend more than NZD 24000 in a year.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="anz-airpoints-visa-platinum"&gt;ANZ Airpoints Visa Platinum&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 12,750 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 1.18 cents for every additional dollar you spend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Airpoints visa is a better option unless you spend more than NZD 21000 in a year.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="american-express-airpoints-platinum"&gt;American Express Airpoints Platinum&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 11,505 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 1.69 cents for every additional dollar you spend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Airpoints visa is a better option unless you spend more than NZD 28000 in a year. However, you get travel insurance and lounge visits which might make up the difference.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id="american-express-gold-card"&gt;American Express Gold Card&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 26,600 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 0.75 cents for every additional dollar you spend.&lt;/p&gt;
&lt;h3 id="american-express-platinum-card"&gt;American Express Platinum Card&lt;/h3&gt;
&lt;p&gt;You must spend at least NZD 93,750 annually to cover the card fee.&lt;/p&gt;
&lt;p&gt;You will get back 1.33 cents for every additional dollar you spend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;However, suppose you use the additional benefits like the Accor membership, the 300-dollar dining credit and the 200-dollar travel credit. In that case, you have to spend only 30,825 dollars a year to cover the card fee.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="my-recommendation"&gt;My Recommendation&lt;/h2&gt;
&lt;p&gt;I like using The American Express Airpoints Platinum card as my primary card. It has the best value. If you are spending less than NZD 11,000, then the American Express Airpoints Card is the next best card to get.&lt;/p&gt;
&lt;p&gt;Since Amex is accepted at most places but not everywhere, I like the ANZ cashback visa as my backup card.&lt;/p&gt;
&lt;p&gt;Is there a card you would like me to evaluate? Let me know in the comments.&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
    <item>
      <title>Do you need a mentor or a coach?</title>
      <link>https://www.ankursheel.com/blog/need-mentor-coach</link>
      <description>This article highlights the importance of having a mentor or coach. It also explores the differences between mentors and coaches and offers insights on finding the right one.</description>
      <enclosure url="https://www.ankursheel.com/assets/images/posts/need-mentor-coach/cover.jpg" length="0" type="image" />
      <guid>https://www.ankursheel.com/blog/need-mentor-coach</guid>
      <pubDate>Tue, 27 Sep 2022 00:00:00 GMT</pubDate>
      <content:encoded>&lt;!-- https://unsplash.com/photos/z7oytXGI6VI --&gt;
&lt;p&gt;The mentor-mentee relationship is one of the most important relationships you will develop during your career.&lt;/p&gt;
&lt;p&gt;I have been fortunate to have been on both sides of the table. I have also seen people mix mentoring and coaching as they are closely related.&lt;/p&gt;
&lt;p&gt;This article will outline what mentoring is and how it differs from coaching (even though they are closely related). It's a 2-way street, so you will also learn what mentors and mentees can do to make it a successful relationship.&lt;/p&gt;
&lt;p&gt;And the question on everyone's mind - How can you find the right mentor for you?&lt;/p&gt;
&lt;h2 id="what-is-mentoring"&gt;What is mentoring&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Communication and long-term focus is key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mentorship is a relationship between a more experienced person (Mentor) and a less experienced person (Mentee). It involves the mentee getting guidance from the mentor based on their knowledge and experiences.&lt;/p&gt;
&lt;p&gt;It generally focuses on long-term development and takes a more holistic approach.&lt;/p&gt;
&lt;p&gt;It involves making a safe space for a mentee to discuss ideas and ask questions without the fear of pressure or judgement.&lt;/p&gt;
&lt;h3 id="what-is-a-mentor"&gt;What is a mentor?&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://www.ankursheel.com/assets/images/posts/need-mentor-coach/cover.jpg" alt="quote I feel like making dreams come true"&gt;&lt;/p&gt;
&lt;p&gt;A mentor is someone who has been in your shoes. They can share their knowledge, skills and/or experience. They can, therefore, provide you with strategies and offer advice on what they did and what worked for them. They can help navigate complex social situations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A helpful mentor to have is someone who is two or three levels above you but doesn't work directly with you&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;Mary Grace Gardner&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A mentor is generally not someone you report to. This allows them to give you unbiased feedback that won't be coloured by past work. Since your work doesn't directly impact them, a mentor is someone you can bounce ideas off, and they can offer a different perspective on things.&lt;/p&gt;
&lt;p&gt;Most importantly, a mentor will focus on self-empowerment. They will answer tough questions and raise questions you hadn't considered.&lt;/p&gt;
&lt;p&gt;A mentor isn't there to tell you what to do. It's up to you to either heed their advice and take action on it or decide to go your own way.&lt;/p&gt;
&lt;h2 id="how-is-coaching-different-from-mentoring"&gt;How is coaching different from mentoring?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;They are similar on the surface, but they are not the same&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Coaching is a more focused approach to learning. It is usually for a shorter term and is primarily focused on assisting people with their current performance.&lt;/p&gt;
&lt;p&gt;It is most beneficial when there is a well-defined goal based on improving skills and performance.&lt;/p&gt;
&lt;h3 id="how-is-a-mentor-different-from-a-coach"&gt;How is a mentor different from a coach?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;It helps if you are intentional about whether you want a coach vs a mentor, and it's more challenging if you don't know the difference.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A coach can address your needs and goals rather than provide general guidance. They can guide you with practical steps towards sharpening your existing skillset and learning new skills.&lt;/p&gt;
&lt;p&gt;A coach tends to focus more on goals and measurable progress. They will devise a plan and run you through a series of practices and lessons to help you achieve it. They will provide specific feedback to ensure you stay on track with the plan to reach the goals set.&lt;/p&gt;
&lt;p&gt;A good coach would work closely with you on a weekly, if not daily, basis.&lt;/p&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;h3 id="a-sport-analogy"&gt;A Sport analogy&lt;/h3&gt;
&lt;p&gt;Taking the sport of cricket as an example&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A mentor&lt;/strong&gt; would be someone with a lot of experience playing a sport. They are not necessarily experts in any specific area of cricket. In fact, they may not even be a cricketer. They know what it takes to become a team captain (and probably have been one themselves).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A coach&lt;/strong&gt; is an expert. They train the cricketer and help them prepare for specific skills such as batting. They focus on upcoming matches and get the cricketer to a certain performance level.&lt;/p&gt;
&lt;h3 id="some-real-life-examples"&gt;Some Real Life examples&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Examples of mentoring&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guidance on career progression&lt;/li&gt;
&lt;li&gt;Dealing with managers&lt;/li&gt;
&lt;li&gt;actionable tips and tricks to ace projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Examples of coaching&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Passing a certification/exam&lt;/li&gt;
&lt;li&gt;Learning the fundamentals behind a field or topics like automated testing or building APIs&lt;/li&gt;
&lt;li&gt;Reviewing code&lt;/li&gt;
&lt;li&gt;Improve your networking skills&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="advice-for-mentors"&gt;Advice for Mentors&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Mentorship is not a one-size fits all model&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is essential to spend the first conversation getting to know each other and setting expectations. You should also understand the mentee's motivations, so you can tailor the advice you provide.&lt;/p&gt;
&lt;p&gt;You must have the bandwidth and provide adequate time for the mentoring relationship. You should meet with the mentee regularly (at least once a month) and give your uninterrupted attention.&lt;/p&gt;
&lt;p&gt;It's essential to be available for your mentee without being overbearing. You should check in with them regularly to see how they are doing but give them space to grow and learn independently.&lt;/p&gt;
&lt;p&gt;Remember to support and encourage your mentee as they advance their knowledge.&lt;/p&gt;
&lt;p&gt;Be honest if you aren't familiar with an area the mentee asks about and try to seek out the answer or connect the mentee with someone else who can help.&lt;/p&gt;
&lt;p&gt;You should also be ready to offer your honest opinion even if it might be hard for the other person to hear. However, you need to show empathy when giving this kind of feedback.&lt;/p&gt;
&lt;p&gt;Your main goal should be to get your mentees to a point where they don't necessarily need you anymore.&lt;/p&gt;
&lt;h2 id="advice-for-mentees"&gt;Advice for Mentees&lt;/h2&gt;
&lt;p&gt;Find a mentor you can work with, someone you admire, and someone who can help you grow. &lt;em&gt;See the following section for advice on how to do that.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Remember to communicate regularly with your mentor but be mindful of not overwhelming your mentor. If something can wait till the next scheduled meeting, batch it up.&lt;/p&gt;
&lt;p&gt;Bring topics to discuss. You can set an agenda if you want, but don't be afraid of free-wheeling as long you discuss whatever is on your mind. You can think of this as "work therapy".&lt;/p&gt;
&lt;p&gt;Try to find ways you can provide value to your mentor. e.g. sharing valuable links and resources.&lt;/p&gt;
&lt;p&gt;Most importantly, put your ego aside, and be able to take advice, even criticism.&lt;/p&gt;
&lt;h3 id="how-do-you-figure-out-who-will-be-a-good-mentor-for-you"&gt;How do you figure out who will be a good mentor for you?&lt;/h3&gt;
&lt;p&gt;Remember, mentorship doesn't have to be a formal relationship. Anyone can be your mentor (even if they don't know about it 😀). You can ask yourself these questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What will I gain by working with this person as a mentor?&lt;/li&gt;
&lt;li&gt;Does their style and values align with mine?&lt;/li&gt;
&lt;li&gt;Have they shared a similar career path, or do they have a career path I seek to follow?&lt;/li&gt;
&lt;li&gt;Does this mentor have a skill set that will complement my weaknesses?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are looking for a mentor to satisfy one of the following reasons, you are looking for a sponsor, not a mentor.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What steps can I skip by having this person as my mentor?&lt;/li&gt;
&lt;li&gt;Who else can this person introduce me to in the next month?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="parting-thoughts"&gt;Parting Thoughts&lt;/h2&gt;
&lt;p&gt;Everyone can use a mentor, and anyone can be a mentor. Both are rewarding in their own ways. You have probably had at least one mentor in your journey (even if unintentionally). Then you reach a point in your life where you have a chance to be one for someone else.&lt;/p&gt;
&lt;p&gt;The success of a mentoring relationship depends on transparency, honesty and mutual trust, so it's essential to find the right person.&lt;/p&gt;
&lt;p&gt;Don't be afraid to part ways if the relationship is not providing value to both of you.&lt;/p&gt;
&lt;p&gt;It's also worth figuring out if you need a mentor or a coach to help you. Both are valuable in their own ways.&lt;/p&gt;
&lt;p&gt;What are your experiences with mentoring? Have you ever had a senior individual or anyone you looked up to as your role model?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to the &lt;a href="http://bloggingfordevs.com/"&gt;Blogging for Devs community&lt;/a&gt; for providing feedback on this post.&lt;/em&gt;&lt;/p&gt;
</content:encoded>
      <comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
    </item>
  </channel>
</rss>