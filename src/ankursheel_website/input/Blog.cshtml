---
Title: All Articles
---

@model Posts

@{
    const int numberOfRecentPosts = 5;
    var sortedPosts = Model.AllPosts.OrderByDescending(x => x.Document.GetLastUpdatedDate()).ToList();
    var groups = sortedPosts.GroupBy(x => x.Document.GetCategory()).OrderBy(x => x.Key);
    var recentPosts = sortedPosts.Where(x => !x.Document.GetTags().Contains("weekly roundup")).Take(numberOfRecentPosts);

    string GetHeaderId(string header)
    {
        return header.RemoveHtmlAndSpecialChars(string.Empty).Replace(' ', '-');
    }
}

<h2>All Categories</h2>

<div class="flex flex-wrap gap-x-6 capitalize">
    @foreach (var group in groups)
    {
        <a href="#@GetHeaderId(group.Key)">@group.Key</a>
    }
</div>


<h2> @numberOfRecentPosts Most Recent Posts</h2>
@foreach (var post in recentPosts)
{
    <div>
        <a href="@post.Document.GetPageUrl()" class="mb-4">@post.Document.GetTitle()</a>
    </div>
}


@foreach (var group in groups)
{
    var header = $"{group.Key} ({group.Count()})";
    <h3 id="@GetHeaderId(group.Key)" class="py-4 border-b border-grey-lighter capitalize">@header</h3>
    @foreach (var post in group)
    {
        <div>
            <a href="@post.Document.GetPageUrl()" class="mb-4">@post.Document.GetTitle()</a> - <time class="prose-sm" datetime="@post.Document.GetLastUpdatedDate().ToString("yy-MM-dd")">@post.Document.GetLastUpdatedDate().ToString("MMMM dd, yyyy")</time>
        </div>
    }
}
